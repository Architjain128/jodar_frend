[{"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/index.js":"1","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/App.js":"2","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/reportWebVitals.js":"3","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/login.js":"4","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/signup.js":"5","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/landing.js":"6","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/marketplace.js":"7","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/dashboard.js":"8","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recprofile.js":"9","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/appprofile.js":"10","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/aapliboard.js":"11","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recliboard.js":"12","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/addjob.js":"13","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/application.js":"14","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/rectable.js":"15","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recappdash.js":"16","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphome.js":"17","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphometable.js":"18","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/fuzzyse.js":"19","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsop.js":"20","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsee.js":"21","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/applicantmyappli.js":"22","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi.js":"23","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi2.js":"24","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/userdata.js":"25","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apptable.js":"26","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recdashviewacc.js":"27","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp.js":"28","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp2.js":"29"},{"size":500,"mtime":1610134556840,"results":"30","hashOfConfig":"31"},{"size":1806,"mtime":1611339110606,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610134556840,"results":"33","hashOfConfig":"31"},{"size":6108,"mtime":1611400990402,"results":"34","hashOfConfig":"31"},{"size":14689,"mtime":1611401010612,"results":"35","hashOfConfig":"31"},{"size":2785,"mtime":1611422173936,"results":"36","hashOfConfig":"31"},{"size":7126,"mtime":1611310643500,"results":"37","hashOfConfig":"31"},{"size":6450,"mtime":1611150637151,"results":"38","hashOfConfig":"31"},{"size":11155,"mtime":1611430489236,"results":"39","hashOfConfig":"31"},{"size":15296,"mtime":1611425807616,"results":"40","hashOfConfig":"31"},{"size":2699,"mtime":1611398962412,"results":"41","hashOfConfig":"31"},{"size":1553,"mtime":1611078232093,"results":"42","hashOfConfig":"31"},{"size":6733,"mtime":1611432049516,"results":"43","hashOfConfig":"31"},{"size":5552,"mtime":1611344911856,"results":"44","hashOfConfig":"31"},{"size":2765,"mtime":1610561389729,"results":"45","hashOfConfig":"31"},{"size":35711,"mtime":1611388917600,"results":"46","hashOfConfig":"31"},{"size":2106,"mtime":1611399015152,"results":"47","hashOfConfig":"31"},{"size":3305,"mtime":1611399134152,"results":"48","hashOfConfig":"31"},{"size":15460,"mtime":1611165021730,"results":"49","hashOfConfig":"31"},{"size":6986,"mtime":1611296867923,"results":"50","hashOfConfig":"31"},{"size":3535,"mtime":1611075800623,"results":"51","hashOfConfig":"31"},{"size":12466,"mtime":1611343504736,"results":"52","hashOfConfig":"31"},{"size":2527,"mtime":1611150220471,"results":"53","hashOfConfig":"31"},{"size":1613,"mtime":1611146683169,"results":"54","hashOfConfig":"31"},{"size":9493,"mtime":1611147818569,"results":"55","hashOfConfig":"31"},{"size":2765,"mtime":1610614334178,"results":"56","hashOfConfig":"31"},{"size":14301,"mtime":1611405779992,"results":"57","hashOfConfig":"31"},{"size":3488,"mtime":1611345947246,"results":"58","hashOfConfig":"31"},{"size":3431,"mtime":1611390322540,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"tj9n1j",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"62"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"62"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"62"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"62"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"62"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/index.js",[],["129","130"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/App.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/reportWebVitals.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/login.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/signup.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/landing.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/marketplace.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/dashboard.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recprofile.js",["131","132","133","134","135","136","137","138","139"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/appprofile.js",["140","141","142","143","144","145","146","147"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/aapliboard.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recliboard.js",["148","149","150","151","152","153"],"import React, { Component } from 'react'\nimport { Redirect} from 'react-router-dom';\nimport {Container,Box,Typography,TextField,Button} from '@material-ui/core';\nimport {AccountCircle} from '@material-ui/icons'\nimport axios from 'axios';\nimport Marketplace from './marketplace';\n\n\n\nclass Recliboard extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            userid:localStorage.getItem(\"Jodar_id\"),\n            data1:\"\",\n            data2:[],\n            dataimg:\"\",\n        }\n        this.getinfo = this.getinfo.bind(this);\n    }\n    getinfo = async () =>{\n        // alert(\"ok\")\n        const d1 = await axios.get('http://localhost:6050/user/'+this.state.userid)\n        const d2 = await axios.get('http://localhost:6050/bio/'+this.state.userid)\n        const dimg = await axios.get('http://localhost:6050/getimg/'+this.state.userid)\n        const dd1 = [];\n        const dd2 = [];\n        dd1.push(d1.data.data1.company_name)\n        dd1.push(d1.data.data1.contact_number)\n        dd1.push(d1.data.data1.email)\n        dd1.push(d1.data.data1.signup_time)\n        console.log(d2)\n        dd2.push(d2.data.data2.Bio)\n        this.setState({data1:dd1,data2:dd2,dataimg:dimg.data.proimg})\n    }\n\n    async componentDidMount(){\n        this.getinfo()\n    }\n    render() {\n\n        return (\n            <Container>\n                <Marketplace data1={this.state.data1} data2={this.state.data2} dataimg={this.state.dataimg} ></Marketplace>\n            </Container>\n        )\n    }\n}\n\nexport default Recliboard\n\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/addjob.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/application.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/rectable.js",["154","155"],"import * as React from 'react';\nimport {Redirect} from 'react-router-dom'\nimport  {DataGrid}  from '@material-ui/data-grid';\nimport Button from '@material-ui/core/Button';\nimport Dashyy from './recappdash';\n\nexport default function DataTable(props) {\n  const columns = [\n    { field: 'Title', headerName: 'Title', description: 'Title of job posted',width: 150,headerAlign: 'center' },\n    { field: 'Maxappli', headerName: 'Max Applicants',headerAlign: 'center',description: 'Maximunm application that can be applied', type : 'number', width: 150  },\n    { field: 'Maxposi', headerName: 'Max Positions',headerAlign: 'center', type :'number',description: 'Maximun accepted application', width: 150 },\n    { field: 'Ondate', headerName: 'Posted On',headerAlign: 'center',description: 'Date of creating listing', width: 150 },\n    { field: 'id', headerName: 'Options', hide: true ,headerAlign: 'center'},\n    {\n      field: \"none\",\n      headerName: \"Options\",\n      headerAlign: 'center',\n      width: 150,\n      description: 'Click corresponding button to update,delete or view this in detail',\n      disableClickEventBubbling: true,\n      renderCell: (params: CellParams) => {\n        const onClick = () => {\n          const api: GridApi = params.api;\n          const fields = api\n            .getAllColumns()\n            .map((c) => c.field)\n            .filter((c) => c !== \"__check__\" && !!c);\n          const thisRow = {};\n  \n          fields.forEach((f) => {\n            thisRow[f] = params.getValue(f);\n          });\n          localStorage.setItem('Jodar_joblist',thisRow.id)\n          // return alert(thisRow.id);\n          window.location.href='/joblist'\n        };\n  \n        return <Button onClick={onClick} width='140' color=\"primary\" variant=\"contained\">View</Button>;\n      }\n    },\n  ];\nconst anty = [];\n  for(let i=0;i<props.dataalljob.length;i++)\n  {\n      const p = props.dataalljob[i]\n      console.log(p)\n      const pa = {id:p[\"_id\"],Title:p[\"Title\"],Maxappli:p[\"Maxappli\"],Maxposi:p[\"Maxposi\"],Ondate:p[\"Ondate\"]}\n      console.log(pa)\n      anty.push(pa)\n  }\n  // const rows = [\n  //     { id: 'a', Title: 'Snow', Maxappli: 1, Maxposi: 1,Ondate : \"12/1/2010\"},\n  //     { id: 'b', Title: 'anow', Maxappli: 10, Maxposi: 10,Ondate : \"12/1/2010\" },\n  //     { id: 3, Title: 'Anow', Maxappli: 2, Maxposi: 2 ,Ondate : \"12/1/2010\"},\n  //     { id: 4, Title: '1now', Maxappli: 22, Maxposi: 22,Ondate : \"12/1/2010\" },\n  //     { id: 5, Title: 'bnow', Maxappli: 1002, Maxposi: 1002,Ondate : \"12/1/2010\"},\n  //     { id: 6, Title: '10now', Maxappli: 10, Maxposi: 10 ,Ondate : \"12/1/2010\"},\n  //   ];\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={anty} columns={columns}  autoPageSize onCellClick />\n    </div>\n  );\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recappdash.js",["156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating'\nimport { FormatAlignJustify } from '@material-ui/icons';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DATE_COL_DEF } from '@material-ui/data-grid';\nconst nodemailer = require('nodemailer'); \n\n\n\nexport default class  Dashyy extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         bid:localStorage.getItem('Jodar_joblist'),\n         comname:\"\",\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         title:\"\",\n         des:\"\",\n         maxappz:\"\",\n         maxposz:\"\",\n         deadlinez:\"\",\n         maxapp:\"\",\n         maxpos:\"\",\n         deadline:\"\",\n         jtype:\"\",\n         jdur:\"\",\n         sala:\"\",\n         skilltok:[],\n         points:0,\n         uptar:'',\n         uptarval:'',\n         soda:'1',\n         sora:'1',\n         sona:'1',\n         mahadata : [],\n         mahadata2 : [],\n        }\n    this.onChange=this.onChange.bind(this)\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.ondeljob=this.ondeljob.bind(this)\n    this.onupjob=this.onupjob.bind(this)\n    this.backMA=this.backMA.bind(this)\n    this.handleChange=this.handleChange.bind(this)\n    this.handleChange2=this.handleChange2.bind(this)\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handlesortra = this.handlesortra.bind(this);\n    this.handlesortna = this.handlesortna.bind(this);\n    this.handlesortda = this.handlesortda.bind(this);\n    this.ptor = this.ptor.bind(this);\n    this.ptos = this.ptos.bind(this);\n    this.stoa = this.stoa.bind(this);\n }\n getjobinfo = async () =>{\n    const d1 = await axios.get('http://localhost:6050/user/'+this.state.jodar_id)\n    const d2 = await axios.get('http://localhost:6050/getjob/'+this.state.bid)\n    const dalist = await axios.get('http://localhost:6050/alljobslisting/'+this.state.bid)\n    const daras = await axios.post('http://localhost:6050/getratingforjob/'+this.state.bid)\nif(daras.data.datarat.length){\n    var raating  = daras.data.datarat[0].Raating\n    var sumrating  = daras.data.datarat[0].sumRating\n    var porat = sumrating/raating\n    console.log(porat)\n    this.setState({points:porat})\n}\n\n    const mahadata =[];\n    for(let i=0;i<dalist.data.dalljoblisting.length;i++)\n    {\n        const p = dalist.data.dalljoblisting[i];\n        const puser = await axios.get('http://localhost:6050/user/'+ p[\"UserId\"])\n        const pedu = await axios.get('http://localhost:6050/alledu/'+ p[\"UserId\"])\n        const pskill = await axios.get('http://localhost:6050/allskill/'+ p[\"UserId\"])\n        const ppdf = await axios.get('http://localhost:6050/downloadpdf/'+ p[\"UserId\"])\n\n        let aedu =[];\n        for(let i=0;i<pedu.data.data4.length;i++)\n        {\n            const ppe = {Edu:pedu.data.data4[i].Edu,Edus:pedu.data.data4[i].Edus,Edue:pedu.data.data4[i].Edue}\n            aedu.push(ppe)\n        }\n        let askill =[]\n        for(let i=0;i<pskill.data.data3.length;i++)\n        {\n            askill.push(pskill.data.data3[i].Spec)\n        }\n        const pa = {Zenmod:\"\",UserId:p[\"UserId\"],Email:puser.data.data1.email,Status:p[\"Status\"],Datejoon:p[\"Datejoon\"],Sop:p[\"Sop\"],Resume:ppdf.data.pdf,Rating:puser.data.data1.reset_token,sumRating:puser.data.data1.expire,fname:puser.data.data1.Firstname,lname:puser.data.data1.Lastname,uedu:aedu,uskill:askill}\n        // if(pa.Rating===0)Rating=\"NaN\"\n        // else{\n        //     pa.Rating = pa.sumRating/pa.Rating\n        // }\n        // console.log(pa)\n        pa.Zenmod = pa.UserId +\";\"+pa.Email\n        if(pa.Status.toLowerCase()!=\"rejected\" || pa.Status.toLowerCase()!=\"reject\"  )\n        mahadata.push(pa)\n    }\n\n    this.setState({mahadata2:mahadata})\n    this.setState({mahadata:mahadata}) \n    // console.log(mahadata)\n    console.log(this.state.mahadata2)\n\n\n    const dd1 = [];\n    const dd2 = [];\n    const sktok = d2.data.data5.Skill_Req.split(\";\");\n    let jtypez=d2.data.data5.Job_Type\n    let jdurz=d2.data.data5.Job_Dura\n    if(jdurz===0 || jdurz === 7 || jdurz=== '0' || jdurz === '7' ) jdurz = \"Indefinite\"\n    if(jtypez === \"1\" || jtypez === 1)jtypez = \"Full Time\"\n    if(jtypez === \"2\" || jtypez === 2)jtypez = \"Part Time\"\n    if(jtypez === \"3\" || jtypez === 3)jtypez = \"Work From Home\"\n    this.setState({skilltok:sktok,comname:d1.data.data1.company_name,Title:d2.data.data5.Title,deadline:d2.data.data5.Deadline,des:d2.data.data5.Descri,maxapp:d2.data.data5.Maxappli,maxpos:d2.data.data5.Maxposi,jtype:jtypez,jdur:jdurz,sala:d2.data.data5.Job_Sal})\n}\n\nhandlesortra=(e)=>{\n    this.setState({sora : e.target.value,sona:\"1\",soda:\"1\"})\n    let tempmahadata = this.state.mahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n      let g=a.Rating\n      let h=b.Rating\n      if(a.Rating===\"NaN\")g=6\n      if(b.Rating===\"NaN\")h=6\n      return g - h\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n      let g=a.Rating\n      let h=b.Rating\n      if(a.Rating===\"NaN\")g=-1\n      if(b.Rating===\"NaN\")h=-1\n      return h-g\n    })\n    this.setState({mahadata2:tempmahadata})\n    console.log(tempmahadata)\n\n  }\n  handlesortna=(e)=>{\n    this.setState({sona : e.target.value,sora:\"1\",soda:\"1\"})\n    let tempmahadata = this.state.mahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.fname +\" \" +a.lname\n        let h=b.fname +\" \" +b.lname\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return g.localeCompare(h)\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.fname +\" \" +a.lname\n        let h=b.fname +\" \" +b.lname\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return h.localeCompare(g)\n    })\n    this.setState({mahadata2:tempmahadata})\n    console.log(tempmahadata)\n\n  }\n  handlesortda=(e)=>{\n    this.setState({soda : e.target.value,sona:\"1\",sora:\"1\"})\n    let tempmahadata = this.state.mahadata\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Datejoon\n        let h=a.Datejoon\n        let gdeadd=g.split(\" \");\n        let gdatede = gdeadd[0].split(\"/\");\n        let gtimede = gdeadd[1].split(\":\");\n        let hdeadd=h.split(\" \");\n        let hdatede = hdeadd[0].split(\"/\");\n        let htimede = hdeadd[1].split(\":\");\n        if( parseInt(gdatede[2])>= parseInt(hdatede[2]))\n        {\n            if( parseInt(gdatede[1])>= parseInt(hdatede[1]))\n            {\n                if( parseInt(gdatede[0])>= parseInt(hdatede[0]))\n                {\n                    if( parseInt(gtimede[0])>= parseInt(htimede[0]))\n                    {\n                        if( parseInt(gtimede[1])>= parseInt(htimede[1]))\n                        {\n                           return -1\n                        }\n                    }\n                }\n            }\n        }\n        return 1\n    })\n    if(e.target.value==2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Datejoon\n        let h=a.Datejoon\n        let gdeadd=g.split(\" \");\n        let gdatede = gdeadd[0].split(\"/\");\n        let gtimede = gdeadd[1].split(\":\");\n        let hdeadd=h.split(\" \");\n        let hdatede = hdeadd[0].split(\"/\");\n        let htimede = hdeadd[1].split(\":\");\n        if( parseInt(gdatede[2])< parseInt(hdatede[2]))\n        {\n            if( parseInt(gdatede[1])< parseInt(hdatede[1]))\n            {\n                if( parseInt(gdatede[0])< parseInt(hdatede[0]))\n                {\n                    if( parseInt(gtimede[0])< parseInt(htimede[0]))\n                    {\n                        if( parseInt(gtimede[1])< parseInt(htimede[1]))\n                        {\n                           return -1\n                        }\n                    }\n                }\n            }\n        }\n        return 1\n    })\n    this.setState({mahadata2:tempmahadata})\n    console.log(tempmahadata)\n    \n  }\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\nbackMA(){\n    window.location.href='/marketplace'\n}\nhandleChange = (event) => {\n    let name = event.target.name\n    let value = event.target.value\n    this.setState({[name]: value}, () => {\n        console.log(this.state)\n    })\n};\nhandleChange2 = (event) => {\n    this.setState({uptarval:event.target.value})\n};\nonChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    this.setState({[name]: value}, () => {\n        console.log(this.state)\n    })\n}\nondeljob(){\n    axios.delete('http://localhost:6050/deljob/'+this.state.bid)\n    .then(res => {\n        console.log(\"ok\")\n        console.log(res.data)\n        if(res.data.status === '201')\n        {\n            alert(\"Job deleted\")\n            window.location.href='/marketplace'\n        }\n        else\n        {\n            alert(\"Error\")\n            window.location.reload()\n        }\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n} \nonupjob(){\n   let a = this.state.maxapp;\n   let b = this.state.maxpos;\n   let c = this.state.deadline;\n   let az = this.state.maxappz;\n   let bz = this.state.maxposz;\n   let cz = this.state.deadlinez;\n   console.log(a)\n   console.log(b)\n   console.log(c)\n   console.log(az)\n   console.log(bz)\n   console.log(cz)\n   console.log(a)\n   console.log(b)\n   console.log(c)\n   if(a != az && az!=\"\")a=az\n   if(b != bz && bz!=\"\")b=bz\n   if(c != cz && cz!=\"\")c=cz\n    const newJob = {\n        Maxappli:a,\n        Maxposi:b,\n        Deadline:c,\n    }\n    console.log(newJob)\n    axios.put('http://localhost:6050/upjob/'+this.state.bid, newJob)\n    .then(res => {\n        console.log(\"ok\")\n        console.log(res.data)\n        if(res.data.status === '201')\n        {\n            alert(\"Job updated\")\n            window.location.reload()\n        }\n        else\n        {\n            alert(\"Error\")\n            window.location.reload()\n        }\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n    this.setState({maxappz:\"\",maxposz:\"\",deadlinez:\"\"});\n} \nonSubmit(e) {\n    e.preventDefault();\n\n    const newJob = {\n        UserId:this.state.jodar_id,\n        Company_name:this.state.comname,\n        email:this.state.email,\n        Title:this.state.title,\n        Descri:this.state.des,\n        Maxappli:this.state.maxapp,\n        Maxposi:this.state.maxpos,\n        Deadline:this.state.deadline,\n        Job_Type:this.state.jtype,\n        Job_Dura:this.state.jdur,\n        Job_Sal:this.state.sala,\n        Skill_Req:this.state.skilltok,\n        Rating:0,\n        sumRating:0,\n        Ondate:this.state.ondate,\n    }\n\n    console.log(newJob)\n    axios.post('http://localhost:6050/addjob', newJob)\n        .then(res => {\n            console.log(\"ok\")\n            console.log(res.data)\n            if(res.data.status === '201')\n            {\n                ///////\n                alert(\"ok add\")\n            }\n            else\n            {\n                alert(\"Error\")\n                // window.location.reload()\n            }\n        })\n        .catch(err=>{\n            console.log(err)\n        })\n\n    this.setState({\n        comname:\"\",\n        email:\"\",\n        ondate:\"\",\n        jodar_id:\"\",\n        title:\"\",\n        des:\"\",\n        maxapp:\"\",\n        maxpos:\"\",\n        deadline:\"\",\n        jtype:\"\",\n        jdur:\"\",\n        sala:\"\",\n        skilltok:\"\",\n        points:''\n    });\n}\nptor(e){\n\n    let vall = e.currentTarget.value + this.state.bid\n    axios.put('http://localhost:6050/ptor/'+vall)\n    .then(res => {\n        console.log(\"ok\")\n        console.log(res.data)\n        if(res.data.status === '201')\n        {\n            alert(\"Application rejected\")\n        }\n        else\n        {\n            alert(\"Error in Rejection\")\n        }\n        window.location.reload()\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n}\n\nptos(e){\n    let vall = e.currentTarget.value + this.state.bid\n    axios.put('http://localhost:6050/ptos/'+vall)\n    .then(res => {\n        console.log(\"ok\")\n        console.log(res.data)\n        if(res.data.status === '201')\n        {\n            alert(\"Application shortlisted\")\n        }\n        else\n        {\n            alert(\"Error in shortlisting\")\n        }\n        window.location.reload()\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n}\nstoa(e){\n    let all = e.currentTarget.value\n    console.log(all)\n    let zz = all.split(\";\");\n    let vall = zz[0] + this.state.bid\n    let emailiduser = zz[1]\n    console.log(e.currentTarget)\n    axios.put('http://localhost:6050/stoa/'+vall)\n    .then(res => {\n        console.log(\"ok\")\n        console.log(res.data)\n        if(res.data.status === '201')\n        {\n            axios.get('http://localhost:6050/mailit/'+emailiduser)\n            .then(res => {\n                alert(\"Application accepted and mail sent to applicant\")\n            })\n            .catch(err=>{\n                console.log(err)\n                // alert(\"Application accepted e\")\n\n            })\n        }\n        else\n        {\n            alert(\"Error in accepting\")\n        }\n        // window.location.reload()\n    })\n    .catch(err=>{\n        console.log(err)\n    })\n}\nrender (){\n  return (\n        <Container>\n            <br/>\n            <Button onClick={this.backMA} color=\"primary\" variant=\"contained\">Back to Dashboard</Button>\n            <br/>\n            <br/>\n            <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px'}}>\n                <Typography variant=\"caption\">Company Name</Typography>\n                <Typography variant=\"subtitle2\">{this.state.comname}</Typography>\n            </Box>\n            <br/>\n            <br/>\n            <Box style={{backgroundColor:\"rgb(247, 240, 250)\",padding:25,borderRadius:5}}>\n\n            <Paper elevation={3} style={{border:\"black 5px solid\"}}>\n                <br/>\n                <Typography variant=\"h3\">{this.state.Title}</Typography><br/>\n                <Typography variant=\"body1\"><b>Deadline</b> {this.state.deadline}</Typography><br/>\n                <Typography variant=\"body2\">{this.state.des}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Max applications</b> {this.state.maxapp}</Typography><br/>\n                <Typography variant=\"overline\"><b>Max positions</b> {this.state.maxpos}</Typography><br/>\n                <Typography variant=\"overline\"><b>Skills Required </b> {this.state.skilltok.map(name => (<Chip variant=\"outlined\" color=\"default\" size=\"small\" label={name} />))}</Typography><br/>\n                <Typography variant=\"overline\"><b>Salary</b> {this.state.sala}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Job Type</b> {this.state.jtype}</Typography><br/>\n                <Typography variant=\"overline\"><b>Job Duration</b> {this.state.jdur}</Typography><br/>\n                <Typography variant=\"overline\"><b>Rating </b><br/>\n                {\n                    (this.state.points === \"\" ||this.state.points === 0 ||this.state.points === \"0\" || this.state.points === \"NaN\" )\n                    ?\n                    <>Not rated yet</>\n                    :\n                    <>\n                    <Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={this.state.points} readOnly />\n                    </>\n                }\n                </Typography><br/>\n                <br/>\n            </Paper>\n            </Box>\n            <br/>\n            <br/>\n            <Box style={{backgroundColor:\"rgb(247, 240, 250)\",padding:25,borderRadius:5}}>\n\n            <Paper elevation={1} style={{border:\"rgb(63,81,181) 2px solid\"}}>\n                <br/>\n                <Typography variant=\"body2\">Choose field and enter new value in textbox and smash update</Typography>\n                <br/>\n                <br/>\n                <TextField variant=\"outlined\" label=\"Max applicant\" name=\"maxappz\" onChange={this.handleChange}></TextField>\n                <TextField variant=\"outlined\" label=\"Max Position\" name=\"maxposz\" onChange={this.handleChange}></TextField>\n                <TextField variant=\"outlined\" label=\"Deadline\" name=\"deadlinez\" onChange={this.handleChange}></TextField>\n                <br/>\n                <br/>\n                <Button onClick={this.onupjob} color=\"primary\" variant=\"contained\">Update</Button>\n                <br/>\n                <br/>\n                <br/>\n            </Paper>\n            <br/>\n            <Paper elevation={1} style={{border:\"red 2px solid\"}}>\n            <br/>\n            <Button onClick={this.ondeljob} color=\"secondary\" variant=\"contained\">Delete</Button>\n            <br/>\n            <br/>\n            </Paper>\n            </Box>\n            <br/>\n            <br/>\n               {/* <hr></hr> */}\n               {/* <hr></hr> */}\n                \n                {\n                this.state.mahadata != []\n                ?\n                <Box style={{backgroundColor:\"rgb(247, 240, 250)\",padding:25,borderRadius:5}}>\n                    <Paper elevation={1} style={{border:\"black 5px solid\"}}>\n                    <br/>\n                    <br/>\n\n                    <Typography variant=\"h3\"><b>Sorting</b></Typography>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Rating</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sora}\n                        onChange={this.handlesortra}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Name of applicant</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sona}\n                        onChange={this.handlesortna}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Date of apply</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.soda}\n                        onChange={this.handlesortda}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    </Paper>\n\n                    <br/>\n                    <br/>\n                    {\n                        this.state.mahadata2.map((row)=>(\n\n                            row.Status === \"pending\"\n                            ?\n                            <div >\n                            <Paper elevation={5} style={{border:\"grey 3px solid\"}}>\n                                <br/>\n                                <Typography variant=\"h5\" style={{color:\"grey\"}}><b>PENDING</b></Typography><br/>\n                                <Divider variant=\"middle\"></Divider>\n                                <br/>\n                                <Typography><b>Applicant Name : </b> {row.fname} {row.lname}</Typography><br/>\n                                <Typography><b>Rating : </b> {row.Rating} </Typography><br/>\n                                <Typography><b>Applied On : </b> {row.Datejoon} </Typography><br/>\n                                <Typography><b>Skills</b></Typography>\n                                {\n                                    row.uskill.map((skill)=>(\n                                        <Chip variant=\"outlined\" color=\"default\" size=\"small\" label={skill} />\n                                    ))\n                                }\n                                {\n                                    !row.uskill.length && \n                                    <Chip variant=\"outlined\" color=\"default\" size=\"small\" label=\"None\" />\n                                }\n                                <br/>\n                                <br/>\n                                <Typography><b>Eduction</b></Typography>\n                                {\n                                    <TableContainer size=\"small\" aria-label=\"a dense table\" style={{width:600,paddingLeft:\"25%\"}} >\n                                    <Table aria-label=\"customize table\" >\n                                        <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                        <TableRow>\n                                            <TableCell style={{color:\"white\"}}>Institution Name</TableCell>\n                                            <TableCell style={{color:\"white\"}} align=\"right\">Start Date(YYYY)</TableCell>\n                                            <TableCell style={{color:\"white\"}} align=\"right\">End Date(YYYY)</TableCell>\n                                        </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {row.uedu.map((edu) => (\n                                            <TableRow>\n                                                <TableCell >{edu.Edu}</TableCell>\n                                                <TableCell align=\"right\">{edu.Edus}</TableCell>\n                                                <TableCell align=\"right\">{edu.Edue}</TableCell>\n                                            </TableRow>\n                                            ))}\n                                            {\n                                            !row.uedu.length &&\n                                            <TableRow>\n                                                <TableCell ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                                <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                                <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                            </TableRow>\n                                            \n                                            }\n                                        </TableBody>\n                                    </Table>\n                                    </TableContainer>\n                                }\n                                <br/>\n                                <Typography><b>Statement of Purpose</b></Typography>\n                                <Typography>{row.Sop}</Typography><br/>\n                                {\n                                    row.Resume === \"false\" ? <Button color=\"default\" disabled=\"true\"><b>No Resume</b></Button> : <Button color=\"primary\" value={row.Resume} onClick={(e)=>{window.open(e.currentTarget.value)}}><b>Download Resume</b></Button>\n                                }\n                                {/* <iframe src={row.Resume} width=\"400\" height=\"400\"></iframe> */}\n                                <br/><br/>\n                                <Button value={row.UserId} onClick={this.ptor} color=\"secondary\" variant=\"contained\" >Reject</Button>\n                                <Button value={row.UserId} onClick={this.ptos} variant=\"contained\" style={{backgroundColor:\"rgb(235, 158, 52)\"}}>Shortlist</Button>\n                                <br/>\n                                <br/>\n\n                            </Paper>\n                            <br/>\n                            <br/>\n                            </div>\n                            :\n                            (row.Status === \"shortlist\" || row.Status === \"shortlisted\")\n                            ?\n                            <div >\n                            <Paper elevation={5} style={{border:\"rgb(235, 158, 52) 3px solid\"}}>\n                                <br/>\n                                <Typography style={{color:\"rgb(235, 158, 52)\"}}><b>SHORTLISTED</b></Typography><br/>\n                                <Divider variant=\"middle\"></Divider>\n                                <br/>\n                                <Typography><b>Applicant Name : </b> {row.fname} {row.lname}</Typography><br/>\n                                <Typography><b>Rating : </b> {row.Rating} </Typography><br/>\n                                <Typography><b>Applied On : </b> {row.Datejoon} </Typography><br/>\n                                <Typography><b>Skills</b></Typography>\n                                {\n                                    row.uskill.map((skill)=>(\n                                        <Chip variant=\"outlined\" color=\"default\" size=\"small\" label={skill} />\n                                    ))\n                                }\n                                {\n                                    !row.uskill.length && \n                                    <Chip variant=\"outlined\" color=\"default\" size=\"small\" label=\"None\" />\n                                }\n                                <br/>\n                                <br/>\n                                <Typography><b>Eduction</b></Typography>\n                                {\n                                    <TableContainer size=\"small\" aria-label=\"a dense table\" style={{width:600,paddingLeft:\"25%\"}} >\n                                    <Table aria-label=\"customize table\" >\n                                        <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                        <TableRow>\n                                            <TableCell style={{color:\"white\"}}>Institution Name</TableCell>\n                                            <TableCell style={{color:\"white\"}} align=\"right\">Start Date(YYYY)</TableCell>\n                                            <TableCell style={{color:\"white\"}} align=\"right\">End Date(YYYY)</TableCell>\n                                        </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {row.uedu.map((edu) => (\n                                            <TableRow>\n                                                <TableCell >{edu.Edu}</TableCell>\n                                                <TableCell align=\"right\">{edu.Edus}</TableCell>\n                                                <TableCell align=\"right\">{edu.Edue}</TableCell>\n                                            </TableRow>\n                                            ))}\n                                            {\n                                            !row.uedu.length &&\n                                            <TableRow>\n                                                <TableCell ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                                <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                                <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                            </TableRow>\n                                            \n                                            }\n                                        </TableBody>\n                                    </Table>\n                                    </TableContainer>\n                                }\n                                <br/>\n                                <Typography><b>Statement of Purpose</b></Typography>\n                                <Typography>{row.Sop}</Typography><br/>\n                                {\n                                    row.Resume === \"false\" ? <Button color=\"default\" disabled=\"true\"><b>No Resume</b></Button> : <Button color=\"primary\" value={row.Resume} onClick={(e)=>{window.open(e.currentTarget.value)}}><b>Download Resume</b></Button>\n                                }\n                                {/* <iframe src={row.Resume} width=\"400\" height=\"400\"></iframe> */}\n                                <br/><br/>\n                                <Button value={row.UserId} onClick={this.ptor} color=\"secondary\" variant=\"contained\" >Reject</Button>\n                                <Button value={row.Zenmod} onClick={this.stoa} name={row.Email} variant=\"contained\" color=\"primary\">Accept</Button>\n                                {/* <Button value={row.UserId} onClick={this.stoa} emaildata={row.Email} variant=\"contained\" color=\"primary\">Accept</Button> */}\n                                <br/>\n                                <br/>\n\n                            </Paper>\n                            <br/>\n                            <br/>\n                            </div>\n                            :\n                            row.Status === \"accepted\"\n                            ?\n                            <div >\n                            <Paper elevation={5} style={{border:\"rgb(98, 184, 72) 3px solid\"}}>\n                                <br/>\n                                <Typography style={{color:\"rgb(98,184,72)\"}}><b>ACCCEPTED</b></Typography><br/>\n                                <Divider variant=\"middle\"></Divider>\n                                <br/>\n                                <Typography><b>Applicant Name : </b> {row.fname} {row.lname}</Typography><br/>\n                                <Typography><b>Rating : </b> {row.Rating} </Typography><br/>\n                                <Typography><b>Applied On : </b> {row.Datejoon} </Typography><br/>\n                                <Typography><b>Skills</b></Typography>\n                                {\n                                    row.uskill.map((skill)=>(\n                                        <Chip variant=\"outlined\" color=\"default\" size=\"small\" label={skill} />\n                                    ))\n                                }\n                                {\n                                    !row.uskill.length && \n                                    <Chip variant=\"outlined\" color=\"default\" size=\"small\" label=\"None\" />\n                                }\n                                <br/>\n                                <br/>\n                                <Typography><b>Eduction</b></Typography>\n                                {\n                                    <TableContainer size=\"small\" aria-label=\"a dense table\" style={{width:600,paddingLeft:\"25%\"}} >\n                                    <Table aria-label=\"customize table\" >\n                                        <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                        <TableRow>\n                                            <TableCell style={{color:\"white\"}}>Institution Name</TableCell>\n                                            <TableCell style={{color:\"white\"}} align=\"right\">Start Date(YYYY)</TableCell>\n                                            <TableCell style={{color:\"white\"}} align=\"right\">End Date(YYYY)</TableCell>\n                                        </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {row.uedu.map((edu) => (\n                                            <TableRow>\n                                                <TableCell >{edu.Edu}</TableCell>\n                                                <TableCell align=\"right\">{edu.Edus}</TableCell>\n                                                <TableCell align=\"right\">{edu.Edue}</TableCell>\n                                            </TableRow>\n                                            ))}\n                                            {\n                                            !row.uedu.length &&\n                                            <TableRow>\n                                                <TableCell ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                                <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                                <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                            </TableRow>\n                                            \n                                            }\n                                        </TableBody>\n                                    </Table>\n                                    </TableContainer>\n                                }\n                                <br/>\n                                <Typography><b>Statement of Purpose</b></Typography>\n                                <Typography>{row.Sop}</Typography><br/>\n                                {\n                                    row.Resume === \"false\" ? <Button color=\"default\" disabled=\"true\"><b>No Resume</b></Button> : <Button color=\"primary\" value={row.Resume} onClick={(e)=>{window.open(e.currentTarget.value)}}><b>Download Resume</b></Button>\n                                }\n                                {/* <Button value={row.Zenmod} onClick={this.stoa} name={row.Email} variant=\"contained\" color=\"primary\">Accept</Button> */}\n\n                                {/* <iframe src={row.Resume} width=\"400\" height=\"400\"></iframe> */}\n                                <br/>\n                                <br/>\n\n                            </Paper>\n                            <br/>\n                            </div>\n                            :\n                            null\n                        ))\n                    }\n                    \n\n                </Box>\n                :\n                null\n                }\n\n                <br/>\n                <br/>\n                <br/>\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphome.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphometable.js",["177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {Redirect} from 'react-router-dom'\nimport  {DataGrid}  from '@material-ui/data-grid';\nimport Button from '@material-ui/core/Button';\nimport Box from '@material-ui/core/Box';\nimport Modal from '@material-ui/core/Modal';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport SettingsPage from \"./fuzzyse\";\nimport Slider from '@material-ui/core/Slider';\nimport { withStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\n\nexport default function DataTableh(props) {\n  const [sop, setsop] = React.useState(null);\n \n\n  let allmyapp = new Map();\n  for(let i=0;i<props.datajj.length;i++)\n  {\n    const p = props.datajj[i]\n    allmyapp.set(p[\"JobId\"], 1 );\n  }\n  let allapp = new Map();\n  for(let i=0;i<props.dataall.length;i++)\n  {\n    const p = props.dataall[i]\n    allapp.set(p[\"_id\"], p[\"total\"]);\n  }\n  let accapp = new Map();\n  for(let i=0;i<props.dataacc.length;i++)\n  {\n    const p = props.dataacc[i]\n    accapp.set(p[\"_id\"], p[\"total\"]);\n  }\n  const antyj = [];\n  for(let i=0;i<props.datagetjob.length;i++)\n  {\n      const p = props.datagetjob[i]\n      // console.log(p)\n      const pa = {id:p[\"_id\"],Title:p[\"Title\"],RecName:p[\"Company_name\"],sumRating:p[\"sumRating\"],Rating:p[\"Rating\"],Salary:p[\"Job_Sal\"],Duration:p[\"Job_Dura\"],Type:p[\"Job_Type\"],Deadline:p[\"Deadline\"],Status:\"Apply\",Maxappli:p[\"Maxappli\"],Maxposi:p[\"Maxposi\"]}\n      // console.log(pa)\n      if(pa.Type==1)\n      pa.Type = \"Full Time\"\n      if(pa.Type==2)\n      pa.Type = \"Part Time\"\n      if(pa.Type==3)\n      pa.Type = \"Work From Home\"\n      if(pa.Duration==7)\n      pa.Duration = \"Indefinite\"\n      if(pa.Rating==0)\n      pa.Rating = \"NaN\"\n      if(pa.Rating!=0)\n      pa.Rating = pa.sumRating/pa.Rating\n      \n      let temp = allapp.get(pa.id)\n      if(!temp)temp = 0\n      if(pa.Maxappli - temp <= 0 ) \n      pa.Status=\"Application Full\"\n      temp = accapp.get(pa.id)\n      if(!temp)temp = 0\n      if(pa.Maxposi - temp <= 0 ) \n      pa.Status=\"Position Full\"\n      temp = allmyapp.get(pa.id)\n      if(!temp)temp = 0\n      if(temp===1)\n      pa.Status=\"Applied\"\n\n      // console.log(pa)\n\n      let newDate = new Date()\n      let date = newDate.getDate();\n      let month = newDate.getMonth() + 1;\n      let year = newDate.getFullYear();\n      let hour = newDate.getHours();\n      let minutes = newDate.getMinutes();\n\n      let deadd=p.Deadline.split(\" \");\n      let datede = deadd[0].split(\"/\");\n      let timede = deadd[1].split(\":\");\n      \n      if(datede[2]>=year)\n      {\n          if(datede[1]>=month)\n          {\n              if(datede[0]>=date)\n              {\n                  if(timede[0]>=hour)\n                  {\n                      if(timede[1]>=minutes)\n                      {\n                        antyj.push(pa)\n                      }\n                  }\n              }\n          }\n      }\n  }\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n   \n      \n      <br/>\n      <SettingsPage data={antyj} dataall={props.dataall} dataacc={props.dataacc} ></SettingsPage>\n    </div>\n  );\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/fuzzyse.js",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216"],"// import data from \"./data.json\";\nimport React, { useState, useEffect } from \"react\";\nimport Fuse from \"fuse.js\";\nimport  {DataGrid}  from '@material-ui/data-grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Rating from '@material-ui/lab/Rating';\nimport { withStyles } from '@material-ui/core/styles';\nimport nopro from \"../files/images/noprofile.jpg\"\nimport axios from 'axios';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Slider from '@material-ui/core/Slider';\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgb(78,94,186)\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  root1: {\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n  media: {\n    height:0,\n    paddingTop: '56.25%', // 16:9\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    minWidth: 600,\n  },\n}));\n\n\nexport default function SettingsPage(props) {\n  const classes = useStyles();\n  const [titira, settitira] = useState(\"1\");\n  const [titi, settiti] = useState(\"1\");\n  const [titidu, settitidu] = useState(\"1\");\n  const [titidura, settitidura] = useState(\"9\");\n  const [titity, settitity] = useState(\"All\");\n  const [value, setValue] = React.useState([0, 200000]);\n  const [searchData, setSearchData] = useState(props.data);\n  const [datasci, setDatasci] = useState(false);\n\n  // useEffect(()=>{\n  //   settiti(\"1\")\n  //   settitira(\"1\")\n  //   settitidu('1')\n  //   setValue([0,200000])\n  //   settitity('All')\n  //   settitidura('9')\n    \n  // })\n\n\n  const searchItem = (query) => {\n    settiti(\"1\")\n    settitira(\"1\")\n    settitidu('1')\n    setValue([0,200000]);\n    settitity('All')\n    settitidura('9')\n\n    if (!query || query===\"\" || query===\" \") {\n      setSearchData(props.data);\n      return;\n    }\n\n    const fuse = new Fuse(props.data, {\n      keys: [\"Title\"]\n    });\n\n    const result = fuse.search(query);\n    const finalResult = [];\n\n    if (result.length) {\n      result.forEach((item) => {\n        finalResult.push(item.item);\n      });\n      setSearchData(finalResult);\n    }\n    else {\n      setSearchData([]);\n    }\n  };\n  \n  const handlesortsal=(e)=>{\n    settiti(e.target.value)\n    settitira(\"1\")\n    settitidu('1')\n    setValue([0,200000]);\n    settitity('All')\n    settitidura('9')\n    if(e.target.value===2)\n    searchData.sort((a,b) => (a.Salary - b.Salary))\n    if(e.target.value===3)\n    searchData.sort((a,b) => (b.Salary - a.Salary))\n  }\n  const handlesortra=(e)=>{\n    settitira(e.target.value)\n    settiti(\"1\")\n    settitidu('1')\n    setValue([0,200000]);\n    settitity('All')\n    settitidura('9')\n    if(e.target.value===2)\n    searchData.sort(function(a,b) {\n      let g=a.Rating\n      let h=b.Rating\n      if(a.Rating===\"NaN\")g=6\n      if(b.Rating===\"NaN\")h=6\n      return g - h\n    })\n    if(e.target.value===3)\n    searchData.sort(function(a,b) {\n      let g=a.Rating\n      let h=b.Rating\n      if(a.Rating===\"NaN\")g=-1\n      if(b.Rating===\"NaN\")h=-1\n      return h-g\n    })\n  }\n   const handlesortdu=(e)=>{\n    settitidu(e.target.value)\n    settiti(\"1\")\n    settitira(\"1\")\n    setValue([0,200000]);\n    settitity('All')\n    settitidura('9')\n    if(e.target.value===2)\n    searchData.sort(function(a,b) {\n      let g=a.Duration\n      let h=b.Duration\n      if(g===\"Indefinite\")g=7\n      if(h===\"Indefinite\")h=7\n      return g - h\n    })\n    if(e.target.value===3)\n    searchData.sort(function(a,b) {\n      let g=a.Duration\n      let h=b.Duration\n      if(g===\"Indefinite\")g=7\n      if(h===\"Indefinite\")h=7\n      return  h-g\n    })\n  }\n\n  const handlefilty=(e)=>{\n    settitity(e.target.value)\n    settitidura('9')\n    setValue([0,200000]);\n    settiti(\"1\")\n    settitidu('1')\n    settitira(\"1\")\n    console.log(e.target.value)\n    if(e.target.value===\"Full Time\")\n    {\n      const aaa = props.data\n      setSearchData( aaa.filter(function(a){ return a.Type === \"Full Time\" }))\n    }\n    else if(e.target.value == \"Part Time\")\n    {\n      const aaa = props.data\n      setSearchData( aaa.filter(function(a){return a.Type === \"Part Time\"}))\n    }\n    else if(e.target.value == \"Work From Home\")\n    {\n      const aaa = props.data\n      setSearchData( aaa.filter(function(a){return a.Type === \"Work From Home\"}))\n    }\n    else\n    setSearchData( props.data)\n  }\n  const handlefildura=(e)=>{\n    settitidura(e.target.value)\n    settitity('All')\n    setValue([0,200000]);\n    settiti(\"1\")\n    settitidu('1')\n    settitira(\"1\")\n    if(e.target.value === '1')\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){ return a.Duration < 1 }))\n    }\n    else if(e.target.value === '2' )\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){return a.Duration < 2}))\n    }\n    else if(e.target.value === '3')\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){return a.Duration < 3}))\n    }\n    else if(e.target.value === '4')\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){return a.Duration < 4}))\n    }\n    else if(e.target.value === '5')\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){return a.Duration < 5}))\n    }\n    else if(e.target.value === '6')\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){return a.Duration < 6}))\n    }\n    else if(e.target.value === '7')\n    {\n      const aaa = props.data\n      setSearchData(aaa.filter(function(a){return a.Duration < 7}))\n    }\n    else\n    setSearchData(props.data)\n  }\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    settitity('All')\n    settitidura('9')\n    settiti(\"1\")\n    settitidu('1')\n    settitira(\"1\")\n    const aaa = props.data\n    setSearchData( aaa.filter(function(a){return a.Salary >= value[0] && a.Salary<=value[1]}))\n  };\n\n  const onClickapply = (e) => {\n    let rowid2 = e.currentTarget.value\n    console.log(rowid2)\n    localStorage.setItem('Jodar_jobapp',rowid2)\n    window.location.href=\"/applyjob\"\n  };\n  const onClickapplied = (e) => {\n    let rowid2 = e.currentTarget.value\n    console.log(rowid2)\n    localStorage.setItem('Jodar_jobapp',rowid2)\n    window.location.href=\"/seejob\"\n  };\n\n  return (\n    <div>\n      <br/>\n      <hr></hr>\n        <Typography variant=\"h6\"><b> Fuzzy Search</b></Typography><br/>\n        <div className=\"search-container\">\n          <input\n            type=\"search\"\n            onChange={(e) => searchItem(e.target.value)}\n            placeholder=\"Search by Title\"\n          />\n        </div>\n      <br/>\n      <hr></hr>\n      \n        <Typography variant=\"h6\"><b> Filtering</b></Typography>\n        <br/>\n          <Typography id=\"range-slider\" gutterBottom>\n            Salary Range\n          </Typography>\n          <Box><b>Lower limit</b> {value[0]}</Box>\n          <Box><b>Upper limit</b> {value[1]}</Box>\n          <Slider\n            value={value}\n            min={0}\n            step={10}\n            max={200000}\n            onChange={handleChange}\n            valueLabelDisplay=\"auto\"\n            aria-labelledby=\"range-slider\"\n          />\n        <br/>\n          <InputLabel id=\"demo-simple-select-label\">Filter by Type</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={titity}\n              onChange={handlefilty}\n            >\n              <MenuItem value=\"All\">All</MenuItem>\n              <MenuItem value=\"Full Time\">Full Time</MenuItem>\n              <MenuItem value=\"Part Time\">Part Time</MenuItem>\n              <MenuItem value=\"Work From Home\">Work From Home</MenuItem>\n            </Select>\n        <br/>\n        <br/>\n          <InputLabel id=\"demo-simple-select-label\">Filter by Duration</InputLabel>\n            <Select\n              labelId=\"demo-simple-select-label\"\n              id=\"demo-simple-select\"\n              value={titidura}\n              onChange={handlefildura}\n            >\n              <MenuItem value=\"9\">All</MenuItem>\n              <MenuItem value=\"1\">less than 1 month</MenuItem>\n              <MenuItem value=\"2\">less than 2 months</MenuItem>\n              <MenuItem value=\"3\">less than 3 months</MenuItem>\n              <MenuItem value=\"4\">less than 4 months</MenuItem>\n              <MenuItem value=\"5\">less than 5 months</MenuItem>\n              <MenuItem value=\"6\">less than 6 months</MenuItem>\n              <MenuItem value=\"7\">less than 7 months</MenuItem>\n              <MenuItem value=\"8\">less than 8 months</MenuItem>\n            </Select>\n      <br/>\n      <br/>\n      <hr></hr>\n      \n        <Typography variant=\"h6\"><b> Sorting</b></Typography>\n        <br/>\n        <br/>\n        <InputLabel id=\"demo-simple-select-label\">Sorting by Rating</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={titira}\n            onChange={handlesortra}\n          >\n            <MenuItem value={1}>None</MenuItem>\n            <MenuItem value={2}>Asc</MenuItem>\n            <MenuItem value={3}>Des</MenuItem>\n          </Select>\n        <br/>\n        <br/>\n        <InputLabel id=\"demo-simple-select-label\">Sorting by Salary</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={titi}\n            onChange={handlesortsal}\n          >\n            <MenuItem value={1}>None</MenuItem>\n            <MenuItem value={2}>Asc</MenuItem>\n            <MenuItem value={3}>Des</MenuItem>\n          </Select>\n        <br/>\n        <br/>\n        <InputLabel id=\"demo-simple-select-label\">Sorting by Duration</InputLabel>\n          <Select\n            labelId=\"demo-simple-select-label\"\n            id=\"demo-simple-select\"\n            value={titidu}\n            onChange={handlesortdu}\n          >\n            <MenuItem value={1}>None</MenuItem>\n            <MenuItem value={2}>Asc</MenuItem>\n            <MenuItem value={3}>Des</MenuItem>\n          </Select>\n        <br/>\n        <br/>\n        <hr></hr>\n        <br/>\n        <br/>\n\n    <div style={{ height: 650, width: '100%' }}> \n    <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customize table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Title</StyledTableCell>\n            <StyledTableCell>Recruiter</StyledTableCell>\n            <StyledTableCell>Rating</StyledTableCell>\n            <StyledTableCell>Salary</StyledTableCell>\n            <StyledTableCell align=\"right\">Type</StyledTableCell>\n            <StyledTableCell align=\"right\">Duration</StyledTableCell>\n            <StyledTableCell align=\"right\">Deadline</StyledTableCell>\n            <StyledTableCell align=\"right\">Status</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n        \n            {searchData.map((row) => (\n              <StyledTableRow>\n                  <StyledTableCell >{row.Title}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.RecName}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Rating}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Salary}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Type}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Duration}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Deadline}</StyledTableCell>\n                  <StyledTableCell align=\"right\">\n                      {row.Status === \"Apply\" ? <Button  value={row.id} variant=\"contained\" color=\"primary\" onClick={onClickapply} >Apply</Button>: row.Status === \"Applied\" ? <Button value={row.id} variant=\"contained\" color=\"secondary\" onClick={onClickapplied} >Applied</Button> : row.Status === \"Position Fill\" ? <Typography value={row.id} color=\"error\" style={{fontSize:12}} >Position Filled</Typography> : <Typography value={row.id} color=\"error\" style={{fontSize:12}}>Application limit reached</Typography> }\n                    </StyledTableCell>\n              </StyledTableRow>\n            ))}\n            {\n              !searchData.length && \n\n              <StyledTableRow>\n                  <StyledTableCell ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell ></StyledTableCell>\n              </StyledTableRow>\n\n            }\n\n        </TableBody>\n      </Table>\n    </TableContainer>\n<Typography variant=\"subtitle\"> *If table showing none values try to enter \" \" space as input in search box to see results if present</Typography>\n      {/* <DataGrid rows={datasci?searchData:props.data}  columns={columns} showToolbar autoPageSize onCellClick /> */}\n      </div>\n    </div>\n  );\n};\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsop.js",["217","218","219","220","221","222","223"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport { FormatAlignJustify } from '@material-ui/icons';\n\nexport default class Dashyy extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         bid:localStorage.getItem('Jodar_jobapp'),\n         comname:\"\",\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         title:\"\",\n         des:\"\",\n         maxappz:\"\",\n         maxposz:\"\",\n         deadlinez:\"\",\n         maxapp:\"\",\n         maxpos:\"\",\n         deadline:\"\",\n         jtype:\"\",\n         jdur:\"\",\n         sala:\"\",\n         skilltok:[],\n         stateofpur:\"\",\n         applybutton:false,\n         button:false,\n        }\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.onapplyjob=this.onapplyjob.bind(this)\n    this.backMA=this.backMA.bind(this)\n    this.handleChange=this.handleChange.bind(this)\n }\n getjobinfo = async () =>{\n    const d2 = await axios.get('http://localhost:6050/getjob/'+this.state.bid)\n    const dap = await axios.get('http://localhost:6050/myappli/'+this.state.jodar_id)\n    // const dac = await axios.get('http://localhost:6050/myapplicur/'+this.state.jodar_id)\n    const reappli=dap.data.dap\n    // const reappcu=dac.data.dac\n\n    if(reappli>=10 )\n    {\n        alert(\"Can't apply due to your max open application limit reached\")\n        window.location.href='/dashboard'\n    }\n\n    const sktok = d2.data.data5.Skill_Req.split(\";\");\n    this.setState({skilltok:sktok,comname:d2.data.data5.Company_name,title:d2.data.data5.Title,deadline:d2.data.data5.Deadline,des:d2.data.data5.Descri,maxapp:d2.data.data5.Maxappli,maxpos:d2.data.data5.Maxposi,jtype:d2.data.data5.Job_Type,jdur:d2.data.data5.Job_Dura,sala:d2.data.data5.Job_Sal})\n}\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\nbackMA(){\n    window.location.href='/dashboard'\n}\nhandleChange = (event) => {\n    let value = event.target.value\n    this.setState({stateofpur: value}, () => {\n        console.log(this.state)\n    })\n};\n\nonapplyjob(e){\n    e.preventDefault();\n    let okokok=false\n    let newDate = new Date()\n    let date = newDate.getDate();\n    let month = newDate.getMonth() + 1;\n    let year = newDate.getFullYear();\n    let hour = newDate.getHours();\n    let minutes = newDate.getMinutes();\n    let deadd=this.state.deadline.split(\" \");\n    let datede = deadd[0].split(\"/\");\n    let timede = deadd[1].split(\":\");\n    \n    if(datede[2]>=year)\n    {\n        if(datede[1]>=month)\n        {\n            if(datede[0]>=date)\n            {\n                if(timede[0]>=hour)\n                {\n                    if(timede[1]>=minutes)\n                    {\n                        okokok=true\n                    }\n                }\n            }\n        }\n    }\n\n    if(okokok===false)\n    {\n        alert(\"Can't apply due to deadline\")\n    }\n    else\n    {\n        let datee = new Date();\n        let dated = datee.getDate();\n        let month = datee.getMonth() +1 ;\n        let yeard = datee.getFullYear();\n        let horus = datee.getHours();\n        let minite = datee.getMinutes();\n        let dtstr = dated + \"/\" + month + \"/\" + yeard + \" \"+horus + \":\" + minite\n        const newlistjob = {\n            JobId : this.state.bid,\n            UserId : this.state.jodar_id,\n            Company_name : this.state.comname,\n            Title : this.state.title,\n            Datejoon : dtstr,\n            Datejoin : \"None\",\n            Job_Sal : this.state.sala,\n            Rating : 0 ,\n            Status : \"pending\",\n            Sop:this.state.stateofpur,\n        }\n        console.log(newlistjob)\n\n        axios.post('http://localhost:6050/jobindash', newlistjob)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                if(res.data.status===\"201\"){\n                    alert(\"applied\")\n                    window.location.href=\"/dashboard\"\n                }\n                else{\n                    alert(res.data.msg)\n                window.location.reload()\n                }\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n    }\n}\n\nrender (){\n\n  return (\n        <Container>\n            <br/>\n            <Button onClick={this.backMA} color=\"primary\" variant=\"contained\">Back to Dashboard</Button>\n        \n            <br/>\n            <br/>\n            <Paper elevation={3} >\n                <Typography variant=\"h4\"><b>Recrutier </b>{this.state.comname}</Typography><br/>\n                <Typography variant=\"h5\">{this.state.title}</Typography><br/>\n                <Typography variant=\"body1\"><b>Deadline</b> {this.state.deadline}</Typography><br/>\n                <Typography variant=\"body2\">{this.state.des}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Max applications</b> {this.state.maxapp}</Typography><br/>\n                <Typography variant=\"overline\"><b>Max positions</b> {this.state.maxpos}</Typography><br/>\n                <Typography variant=\"overline\"><b>Skills Required </b> {this.state.skilltok.map(name => (<Chip variant=\"outlined\" color=\"default\" size=\"small\" label={name} />))}</Typography><br/>\n                <Typography variant=\"overline\"><b>Salary</b> {this.state.sala}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Job Type</b> {this.state.jtype}</Typography><br/>\n                <Typography variant=\"overline\"><b>Job Duration</b> {this.state.jdur}</Typography><br/>\n                <Typography variant=\"overline\"><b>Rating</b> {this.state.points}</Typography><br/>\n\n            </Paper>\n            <br/>\n            <br/>\n\n            <Paper>\n                <br/>\n                <Typography variant=\"body2\">enter statement of purpose in textbox and smash apply</Typography>\n                <br/>\n                <br/>\n                <TextField variant=\"outlined\"  multiline inputProps={{ maxLength: 250 }} label=\"Not more than 250 words\" name=\"soppp\" onChange={this.handleChange}></TextField>\n                <br/>\n                <br/>\n                    <Button onClick={this.onapplyjob} color=\"primary\"  variant=\"contained\">Apply</Button> \n                <br/>\n                <br/>\n            </Paper>\n    \n            <br/>\n            <br/>\n\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsee.js",["224","225","226","227","228","229","230","231"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport { FormatAlignJustify } from '@material-ui/icons';\n\nexport default class Dashyy extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         bid:localStorage.getItem('Jodar_jobapp'),\n         comname:\"\",\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         title:\"\",\n         des:\"\",\n         maxappz:\"\",\n         maxposz:\"\",\n         deadlinez:\"\",\n         maxapp:\"\",\n         maxpos:\"\",\n         deadline:\"\",\n         jtype:\"\",\n         jdur:\"\",\n         sala:\"\",\n         skilltok:[],\n         stateofpur:\"\",\n       \n        }\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.backMA=this.backMA.bind(this)\n }\n getjobinfo = async () =>{\n    const d2 = await axios.get('http://localhost:6050/getjob/'+this.state.bid)\n    const sktok = d2.data.data5.Skill_Req.split(\";\");\n    this.setState({skilltok:sktok,comname:d2.data.data5.Company_name,title:d2.data.data5.Title,deadline:d2.data.data5.Deadline,des:d2.data.data5.Descri,maxapp:d2.data.data5.Maxappli,maxpos:d2.data.data5.Maxposi,jtype:d2.data.data5.Job_Type,jdur:d2.data.data5.Job_Dura,sala:d2.data.data5.Job_Sal})\n}\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\nbackMA(){\n    window.location.href='/dashboard'\n}\n\nrender (){\n  return (\n        <Container>\n            <br/>\n            <Button onClick={this.backMA} color=\"primary\" variant=\"contained\">Back to Dashboard</Button>\n            <br/>\n            <br/>\n            <Paper elevation={3} >\n                <Typography variant=\"h4\"><b>Recrutier </b>{this.state.comname}</Typography><br/>\n                <Typography variant=\"h5\">{this.state.title}</Typography><br/>\n                <Typography variant=\"body1\"><b>Deadline</b> {this.state.deadline}</Typography><br/>\n                <Typography variant=\"body2\">{this.state.des}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Max applications</b> {this.state.maxapp}</Typography><br/>\n                <Typography variant=\"overline\"><b>Max positions</b> {this.state.maxpos}</Typography><br/>\n                <Typography variant=\"overline\"><b>Skills Required </b> {this.state.skilltok.map(name => (<Chip variant=\"outlined\" color=\"default\" size=\"small\" label={name} />))}</Typography><br/>\n                <Typography variant=\"overline\"><b>Salary</b> {this.state.sala}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Job Type</b> {this.state.jtype}</Typography><br/>\n                <Typography variant=\"overline\"><b>Job Duration</b> {this.state.jdur}</Typography><br/>\n                <Typography variant=\"overline\"><b>Rating</b> {this.state.points}</Typography><br/>\n\n            </Paper>\n            <br/>\n            <br/>\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/applicantmyappli.js",["232","233","234","235","236","237","238","239","240","241","242"],"import React, { Component } from 'react'\nimport {Container} from '@material-ui/core';\nimport axios from 'axios';\nimport Dashboard from './dashboard';\nimport {Typography,Paper} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating'\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ClickAwayListener from '@material-ui/core/ClickAwayListener';\nimport Grow from '@material-ui/core/Grow';\nimport Popper from '@material-ui/core/Popper';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MenuList from '@material-ui/core/MenuList';\nimport SplitButton from \"./buttongrp\";\n\nclass Mydashappli extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            userid:localStorage.getItem(\"Jodar_id\"),\n            appliedjob:[],\n            workingjob:[],\n            rejectedjob:[],\n            // ratingoptions : [<><FS/><ES/><ES/><ES/><ES/></>,<><FS/><FS/><ES/><ES/><ES/></>,<><FS/><FS/><FS/><ES/><ES/></>,<><FS/><FS/><FS/><FS/><ES/></>,<><FS/><FS/><FS/><FS/><FS/></>]\n        }\n        this.getinfo = this.getinfo.bind(this);\n        this.rateitnow = this.rateitnow.bind(this);\n    }\n    getinfo = async () =>{\n        console.log(this.props.datajj)\n        const appliedjobvar = [];\n        const workingjobvar = [];\n        const rejectedjobvar = [];\n        for(let i=0;i<this.props.datajj.length;i++)\n        {\n            const p = this.props.datajj[i]\n            const pa = {jobid:p[\"JobId\"],userid:p[\"UserId\"],Title:p[\"Title\"],RecName:p[\"Company_name\"],Rating:p[\"Rating\"],Salary:p[\"Job_Sal\"],Datejoon:p[\"Datejoon\"],Datejoin:p[\"Datejoin\"],Status:p[\"Status\"]}\n            if(pa.Rating === 0)pa.Rating = \"NaN\"\n            if(pa.Status === \"pending\" || pa.Status === \"shortlisted\" || pa.Status === \"shortlist\")appliedjobvar.push(pa)\n            if(pa.Status === \"rejected\")rejectedjobvar.push(pa)\n            if(pa.Status === \"accepted\")workingjobvar.push(pa)\n        }\n        // const pa = {jobid:\"1\",userid:\"2\",Title:\"aa\",RecName:\"bb\",Rating:0,Salary:5000,Datejoon:\"12/02/2021 23:55\",Datejoin:\"12/02/2021 23:55\",Status:\"p\"}\n        // const pat = {jobid:\"2\",userid:\"2\",Title:\"aa\",RecName:\"bb\",Rating:0,Salary:5000,Datejoon:\"12/02/2021 23:55\",Datejoin:\"12/02/2021 23:55\",Status:\"p\"}\n        // workingjobvar.push(pa)\n        // workingjobvar.push(pat)\n        this.setState({appliedjob:appliedjobvar,workingjob:workingjobvar,rejectedjob:rejectedjobvar})\n    }\n    rateitnow = (val,idten)=>{\n        // console.log(event.target.id)\n        // console.log(event.target.value)\n        console.log(val)\n    }\n    async componentDidMount(){\n        this.getinfo()\n    }\n    render() {\n     \n        return (\n            <Container>\n                <Paper elevation={3}>\n                    <br/>\n                        <Typography>My Accepted Jobs</Typography>\n                        <br/>\n                        <TableContainer style={{padding:50}}>\n                            <Table  aria-label=\"customize table\">\n                                <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                <TableRow>\n                                    <TableCell style={{color:\"white\"}} align=\"left\">Title</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Date of join</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Recruiter</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Salary</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"right\">Rated By You</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.workingjob.map((row) => (\n                                    <TableRow>\n                                        <TableCell align=\"left\">{row.Title}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoin}</TableCell>\n                                        <TableCell align=\"center\">{row.RecName}</TableCell>\n                                        <TableCell align=\"center\">{row.Salary}</TableCell>\n                                        <TableCell align=\"right\">\n                                            {\n                                                (row.Rating === \"NaN\" || row.Rating === 0) ? <div><SplitButton datar={row.jobid}></SplitButton></div>:<Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.Rating} readOnly />\n                                                // (row.Rating === \"NaN\" || row.Rating === 0) ? <div><Rating name=\"half-rating\"  defaultValue={0} onChange={(event,newValue)=>this.rateitnow(newValue)}></Rating> </div>:<Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.Rating} readOnly />\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                    ))}\n                                    {\n                                    !this.state.workingjob.length &&\n                                    <TableRow>\n                                        <TableCell align=\"left\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\" ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                    </TableRow>\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                        <br/>\n                    <br/>\n                </Paper>\n                <br/>\n                <Paper elevation={3}>\n                    <br/>\n                        <Typography>My Applied Jobs</Typography>\n                        <br/>\n                        <TableContainer style={{padding:50}}>\n                            <Table  aria-label=\"customize table\">\n                                <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                <TableRow>\n                                    <TableCell style={{color:\"white\"}} align=\"left\">Title</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Applied on</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Recruiter</TableCell>\n                                    <TableCell style={{color:\"white\"}}  align=\"right\">Salary</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.appliedjob.map((row) => (\n                                    <TableRow>\n                                        <TableCell align=\"left\">{row.Title}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoon}</TableCell>\n                                        <TableCell align=\"center\">{row.RecName}</TableCell>\n                                        <TableCell  align=\"right\">{row.Salary}</TableCell>\n                                    </TableRow>\n                                    ))}\n                                    {\n                                    !this.state.appliedjob.length && \n                                    <TableRow>\n                                        <TableCell align=\"left\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell  align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                    </TableRow>\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                        <br/>\n                    <br/>\n                </Paper>\n                <br/>\n                <Paper elevation={3}>\n                    <br/>\n                        <Typography>My Rejected Jobs</Typography>\n                        <br/>\n                        <TableContainer style={{padding:50}}>\n                            <Table  aria-label=\"customize table\">\n                                <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                <TableRow>\n                                    <TableCell style={{color:\"white\"}} align=\"left\">Title</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Applied on</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Rejected on</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Recruiter</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"right\">Salary</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.rejectedjob.map((row) => (\n                                    <TableRow>\n                                        <TableCell align=\"left\">{row.Title}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoon}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoin}</TableCell>\n                                        <TableCell align=\"center\">{row.RecName}</TableCell>\n                                        <TableCell  align=\"right\">{row.Salary}</TableCell>\n                                    </TableRow>\n                                    ))}\n                                    {\n                                    !this.state.rejectedjob.length && \n                                    <TableRow>\n                                        <TableCell align=\"left\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell  align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                    </TableRow>\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                        <br/>\n                    <br/>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default Mydashappli\n\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi.js",["243"],"\n  \nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from 'axios'\nclass GooLogin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirectToReferrer: false,\n            redirect : \"\",\n        };\n    }\n    responseGoogle = response => {\n        console.log(response)\n        const { googleId, name, email } = response.profileObj;\n        const newUser = {\n            email: email,\n            password: googleId,\n            checked:true,\n        }\n        if(newUser)\n        {\n            console.log(newUser)\n\n            axios.post('http://localhost:6050/login', newUser)\n                .then(res => {\n                    console.log(\"ok\")\n                    console.log(res.data)\n                    if(res.data.type === \"r\")\n                    this.setState({redirect:\"r\"})\n                    if(res.data.type === \"a\")\n                    this.setState({redirect:\"a\"})\n                    window.alert(res.data.msg)\n                    if(res.data.status === '201')\n                    {\n                        console.log(res.data.userdata._id)\n                        localStorage.setItem(\"Jodar_id\", res.data.userdata._id);\n                        localStorage.setItem(\"Jodar_id_type\", res.data.userdata.type);\n                        this.setState({login:false})\n                    }\n                    else\n                    window.location.reload()\n                    this.setState({ redirectToReferrer: true });\n                })\n                .catch(err=>{\n                    console.log(err)\n                })\n        }\n        else{\n            alert(\"failed\");\n        }\n    };\n\n    render() {\n        if (this.state.redirectToReferrer) {\n            \n                if(this.state.redirect === \"r\"){\n                    return <Redirect to=\"/marketplace\"></Redirect>\n                }\n                if(this.state.redirect === \"a\")\n                {\n                    return <Redirect to=\"/dashboard\"></Redirect>\n                }\n        }\n        else {\n            return (\n                <GoogleLogin\n                    clientId=\"350226045015-6b6mlsel22edgq77dgtkbqb179gk2ng7.apps.googleusercontent.com\"\n                    buttonText=\"Login with Google\"\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                />\n            );\n        }\n        \n    }\n}\n\nexport default GooLogin;","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi2.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/userdata.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apptable.js",["244","245"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recdashviewacc.js",["246","247","248","249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating'\nimport { FormatAlignJustify } from '@material-ui/icons';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DATE_COL_DEF } from '@material-ui/data-grid';\nimport SplitButton2 from './buttongrp2'\n\n\n\nexport default class  Acceptedlist extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         comname:this.props.data1[0],\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         accmahadata : [],\n         accmahadata2 : [],\n         sora : \"1\",\n         soda : \"1\",\n         sota : \"1\",\n         sona : \"1\",\n        }\n        console.log(props)\n    this.onChange=this.onChange.bind(this)\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.handleChange=this.handleChange.bind(this)\n    this.handleChange2=this.handleChange2.bind(this)\n    this.handlesortra = this.handlesortra.bind(this);\n    this.handlesortna = this.handlesortna.bind(this);\n    this.handlesortda = this.handlesortda.bind(this);\n    this.handlesortta = this.handlesortta.bind(this);\n }\n getjobinfo = async () =>{\n    //  all accepted jobs from applicationd\n    const pp =   await axios.get('http://localhost:6050/getjobuser/'+ this.state.jodar_id)\n\n    const mahadata =[];\n    for(let i=0;i<pp.data.datapp.length;i++)\n    {\n        const p = pp.data.datapp[i];\n        const pjob = await axios.get('http://localhost:6050/allmypostedjobs/'+ p[\"_id\"])\n        for(let j=0;j<pjob.data.allmypostedjobs.length;j++)\n        {\n            const pj = pjob.data.allmypostedjobs[j];\n            const puser = await axios.get('http://localhost:6050/user/'+ pj[\"UserId\"])\n            const pa = {LORating:pj[\"Rating\"],Raating:0,Title:p[\"Title\"],Jtype:p[\"Job_Type\"],Datejoin:pj[\"Datejoin\"],Rating:puser.data.data1.expire,sumRating:puser.data.data1.reset_token,fname:puser.data.data1.Firstname,lname:puser.data.data1.Lastname,uid : puser.data.data1._id}\n            if(pa.Rating===0)pa.Raating = 0\n            else{\n                pa.Raating = pa.sumRating/pa.Rating\n            }\n            if(pa.Jtype===1)pa.Jtype = \"Full Time\"\n            if(pa.Jtype===2)pa.Jtype = \"Part Time\"\n            if(pa.Jtype===3)pa.Jtype = \"Work From Home\"\n            console.log(pa)\n            mahadata.push(pa)\n        }\n    }\n\n    \n    this.setState({accmahadata2:mahadata,accmahadata:mahadata})\n    // console.log(mahadata)\n    // console.log(this.state.accmahadata2)\n}\n\nhandlesortra=(e)=>{\n    this.setState({sora : e.target.value,sona:\"1\",soda:\"1\",sota:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n      let g=a.Raating\n      let h=b.Raating\n      if(a.Raating===\"NaN\" ||a.Raating===NaN || a.Raating=== 0)g=6\n      if(b.Raating===\"NaN\" ||b.Raating===NaN || b.Raating=== 0)h=6\n      return g - h\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n      let g=a.Raating\n      let h=b.Raating\n      if(a.Raating===\"NaN\" ||a.Raating===NaN || a.Raating=== 0)g=-1\n      if(b.Raating===\"NaN\" ||b.Raating===NaN || b.Raating=== 0)h=-1\n      return h-g\n    })\n    this.setState({accmahadata2:tempmahadata})\n    // console.log(tempmahadata)\n  }\n  handlesortna=(e)=>{\n    this.setState({sona : e.target.value,sora:\"1\",soda:\"1\",sota:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.fname +\" \" +a.lname\n        let h=b.fname +\" \" +b.lname\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return g.localeCompare(h)\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.fname +\" \" +a.lname\n        let h=b.fname +\" \" +b.lname\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return h.localeCompare(g)\n    })\n    this.setState({accmahadata2:tempmahadata})\n    // console.log(tempmahadata)\n  }\n    handlesortta=(e)=>{\n    this.setState({sota : e.target.value,sora:\"1\",soda:\"1\",sona:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Title\n        let h=b.Title\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return g.localeCompare(h)\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Title\n        let h=b.Title\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return h.localeCompare(g)\n    })\n    this.setState({accmahadata2:tempmahadata})\n    // console.log(tempmahadata)\n  }\n  handlesortda=(e)=>{\n    this.setState({soda : e.target.value,sona:\"1\",sora:\"1\",sota:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Datejoon\n        let h=a.Datejoon\n        let gdeadd=g.split(\" \");\n        let gdatede = gdeadd[0].split(\"/\");\n        let gtimede = gdeadd[1].split(\":\");\n        let hdeadd=h.split(\" \");\n        let hdatede = hdeadd[0].split(\"/\");\n        let htimede = hdeadd[1].split(\":\");\n        if( parseInt(gdatede[2])>= parseInt(hdatede[2]))\n        {\n            if( parseInt(gdatede[1])>= parseInt(hdatede[1]))\n            {\n                if( parseInt(gdatede[0])>= parseInt(hdatede[0]))\n                {\n                    if( parseInt(gtimede[0])>= parseInt(htimede[0]))\n                    {\n                        if( parseInt(gtimede[1])>= parseInt(htimede[1]))\n                        {\n                           return -1\n                        }\n                    }\n                }\n            }\n        }\n        return 1\n    })\n    if(e.target.value==2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Datejoon\n        let h=a.Datejoon\n        let gdeadd=g.split(\" \");\n        let gdatede = gdeadd[0].split(\"/\");\n        let gtimede = gdeadd[1].split(\":\");\n        let hdeadd=h.split(\" \");\n        let hdatede = hdeadd[0].split(\"/\");\n        let htimede = hdeadd[1].split(\":\");\n        if( parseInt(gdatede[2])< parseInt(hdatede[2]))\n        {\n            if( parseInt(gdatede[1])< parseInt(hdatede[1]))\n            {\n                if( parseInt(gdatede[0])< parseInt(hdatede[0]))\n                {\n                    if( parseInt(gtimede[0])< parseInt(htimede[0]))\n                    {\n                        if( parseInt(gtimede[1])< parseInt(htimede[1]))\n                        {\n                           return -1\n                        }\n                    }\n                }\n            }\n        }\n        return 1\n    })\n    this.setState({accmahadata2:tempmahadata})\n    console.log(tempmahadata)\n    \n  }\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\n\nhandleChange = (event) => {\n    let name = event.target.name\n    let value = event.target.value\n    this.setState({[name]: value}, () => {\n        console.log(this.state)\n    })\n};\nhandleChange2 = (event) => {\n    this.setState({uptarval:event.target.value})\n};\nonChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    this.setState({[name]: value}, () => {\n        console.log(this.state)\n    })\n}\n\n\n\nrender (){\n  return (\n        <Container>\n            <br/>\n            <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px'}}>\n                <Typography variant=\"caption\">Company Name</Typography>\n                <Typography variant=\"subtitle2\">{this.state.comname}</Typography>\n            </Box>\n            <br/>\n            <br/>\n\n                {\n                this.state.accmahadata != []\n                ?\n                <Box style={{padding:15,borderRadius:5}}>\n                    <Paper elevation={1} style={{border:\"black 1px solid\"}}>\n                    <br/>\n                    <Typography variant=\"h3\"><b>Sorting</b></Typography>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Rating</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sora}\n                        onChange={this.handlesortra}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Name</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sona}\n                        onChange={this.handlesortna}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by joning date</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.soda}\n                        onChange={this.handlesortda}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by job title</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sota}\n                        onChange={this.handlesortta}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    </Paper>\n\n                    {/* <hr></hr> */}\n                    <br/>\n                    <br/>\n                    <TableContainer size=\"small\" aria-label=\"a dense table\" component={Paper}>\n                        <Table aria-label=\"customize table\" >\n                            <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                            <TableRow>\n                                <TableCell style={{color:\"white\"}}>Applicant Name</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Job Title</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Job Type</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Date of Joining</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Rating by you*</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Rating**</TableCell>\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.accmahadata2.map((row) => (\n                                <TableRow>\n                                    <TableCell >{row.fname} {row.lname}</TableCell>\n                                    <TableCell align=\"center\">{row.Title}</TableCell>\n                                    <TableCell align=\"center\">{row.Jtype}</TableCell>\n                                    <TableCell align=\"center\">{row.Datejoin}</TableCell>\n                                    <TableCell align=\"center\">{\n                                                ( row.LORating === 0 ||  row.LORating === \"NaN\" ||row.LORating === NaN) ? <div><SplitButton2 datar={row.uid}></SplitButton2></div>:<Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.LORating} readOnly />\n                                    }</TableCell>\n                                    <TableCell align=\"center\"><Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.Raating} readOnly /></TableCell>\n                                </TableRow>\n                                ))}\n                           \n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <br/>\n                    <Typography variant=\"subtitle2\">* Ratings shown here are ratings given by you to the applicants for corresponding job this is not a average rating</Typography>\n                    <Typography variant=\"subtitle2\">** Average rating of an applicant covering average of rating for all job (accepted ones only)  </Typography>\n                </Box>\n                :\n                null\n                }\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp2.js",[],{"ruleId":"266","replacedBy":"267"},{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","severity":1,"message":"271","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":17},{"ruleId":"270","severity":1,"message":"274","line":16,"column":8,"nodeType":"272","messageId":"273","endLine":16,"endColumn":13},{"ruleId":"270","severity":1,"message":"275","line":61,"column":10,"nodeType":"272","messageId":"273","endLine":61,"endColumn":12},{"ruleId":"270","severity":1,"message":"276","line":63,"column":20,"nodeType":"272","messageId":"273","endLine":63,"endColumn":30},{"ruleId":"270","severity":1,"message":"277","line":64,"column":10,"nodeType":"272","messageId":"273","endLine":64,"endColumn":14},{"ruleId":"270","severity":1,"message":"278","line":85,"column":9,"nodeType":"272","messageId":"273","endLine":85,"endColumn":19},{"ruleId":"270","severity":1,"message":"279","line":89,"column":9,"nodeType":"272","messageId":"273","endLine":89,"endColumn":20},{"ruleId":"270","severity":1,"message":"280","line":163,"column":9,"nodeType":"272","messageId":"273","endLine":163,"endColumn":15},{"ruleId":"281","severity":1,"message":"282","line":338,"column":9,"nodeType":"283","endLine":338,"endColumn":66},{"ruleId":"270","severity":1,"message":"271","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":17},{"ruleId":"270","severity":1,"message":"274","line":25,"column":8,"nodeType":"272","messageId":"273","endLine":25,"endColumn":13},{"ruleId":"270","severity":1,"message":"276","line":103,"column":20,"nodeType":"272","messageId":"273","endLine":103,"endColumn":30},{"ruleId":"270","severity":1,"message":"275","line":107,"column":10,"nodeType":"272","messageId":"273","endLine":107,"endColumn":12},{"ruleId":"281","severity":1,"message":"282","line":405,"column":9,"nodeType":"283","endLine":405,"endColumn":67},{"ruleId":"284","severity":1,"message":"285","line":422,"column":40,"nodeType":"286","messageId":"287","endLine":422,"endColumn":62},{"ruleId":"288","severity":1,"message":"289","line":422,"column":181,"nodeType":"290","endLine":422,"endColumn":197},{"ruleId":"291","severity":1,"message":"292","line":485,"column":17,"nodeType":"283","endLine":485,"endColumn":71},{"ruleId":"270","severity":1,"message":"293","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":18},{"ruleId":"270","severity":1,"message":"294","line":3,"column":19,"nodeType":"272","messageId":"273","endLine":3,"endColumn":22},{"ruleId":"270","severity":1,"message":"295","line":3,"column":23,"nodeType":"272","messageId":"273","endLine":3,"endColumn":33},{"ruleId":"270","severity":1,"message":"296","line":3,"column":34,"nodeType":"272","messageId":"273","endLine":3,"endColumn":43},{"ruleId":"270","severity":1,"message":"297","line":3,"column":44,"nodeType":"272","messageId":"273","endLine":3,"endColumn":50},{"ruleId":"270","severity":1,"message":"298","line":4,"column":9,"nodeType":"272","messageId":"273","endLine":4,"endColumn":22},{"ruleId":"270","severity":1,"message":"293","line":2,"column":9,"nodeType":"272","messageId":"273","endLine":2,"endColumn":17},{"ruleId":"270","severity":1,"message":"299","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":14},{"ruleId":"270","severity":1,"message":"300","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":13},{"ruleId":"270","severity":1,"message":"301","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"302","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":24},{"ruleId":"270","severity":1,"message":"303","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":19},{"ruleId":"270","severity":1,"message":"304","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":17},{"ruleId":"270","severity":1,"message":"305","line":23,"column":10,"nodeType":"272","messageId":"273","endLine":23,"endColumn":28},{"ruleId":"270","severity":1,"message":"306","line":27,"column":10,"nodeType":"272","messageId":"273","endLine":27,"endColumn":22},{"ruleId":"270","severity":1,"message":"307","line":28,"column":7,"nodeType":"272","messageId":"273","endLine":28,"endColumn":17},{"ruleId":"308","severity":1,"message":"309","line":118,"column":35,"nodeType":"286","messageId":"310","endLine":118,"endColumn":37},{"ruleId":"308","severity":1,"message":"309","line":118,"column":74,"nodeType":"286","messageId":"310","endLine":118,"endColumn":76},{"ruleId":"270","severity":1,"message":"311","line":128,"column":11,"nodeType":"272","messageId":"273","endLine":128,"endColumn":14},{"ruleId":"270","severity":1,"message":"312","line":129,"column":11,"nodeType":"272","messageId":"273","endLine":129,"endColumn":14},{"ruleId":"308","severity":1,"message":"313","line":217,"column":22,"nodeType":"286","messageId":"310","endLine":217,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":310,"column":9,"nodeType":"286","messageId":"310","endLine":310,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":310,"column":20,"nodeType":"286","messageId":"310","endLine":310,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":311,"column":9,"nodeType":"286","messageId":"310","endLine":311,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":311,"column":20,"nodeType":"286","messageId":"310","endLine":311,"endColumn":22},{"ruleId":"308","severity":1,"message":"309","line":312,"column":9,"nodeType":"286","messageId":"310","endLine":312,"endColumn":11},{"ruleId":"308","severity":1,"message":"309","line":312,"column":20,"nodeType":"286","messageId":"310","endLine":312,"endColumn":22},{"ruleId":"288","severity":1,"message":"289","line":505,"column":69,"nodeType":"290","endLine":505,"endColumn":85},{"ruleId":"308","severity":1,"message":"309","line":545,"column":37,"nodeType":"286","messageId":"310","endLine":545,"endColumn":39},{"ruleId":"270","severity":1,"message":"314","line":1,"column":16,"nodeType":"272","messageId":"273","endLine":1,"endColumn":24},{"ruleId":"270","severity":1,"message":"315","line":2,"column":10,"nodeType":"272","messageId":"273","endLine":2,"endColumn":20},{"ruleId":"270","severity":1,"message":"293","line":3,"column":9,"nodeType":"272","messageId":"273","endLine":3,"endColumn":17},{"ruleId":"270","severity":1,"message":"316","line":4,"column":10,"nodeType":"272","messageId":"273","endLine":4,"endColumn":18},{"ruleId":"270","severity":1,"message":"297","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":14},{"ruleId":"270","severity":1,"message":"294","line":6,"column":8,"nodeType":"272","messageId":"273","endLine":6,"endColumn":11},{"ruleId":"270","severity":1,"message":"317","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":13},{"ruleId":"270","severity":1,"message":"295","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":18},{"ruleId":"270","severity":1,"message":"296","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":17},{"ruleId":"270","severity":1,"message":"318","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":14},{"ruleId":"270","severity":1,"message":"319","line":12,"column":10,"nodeType":"272","messageId":"273","endLine":12,"endColumn":20},{"ruleId":"270","severity":1,"message":"320","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":18},{"ruleId":"270","severity":1,"message":"321","line":14,"column":8,"nodeType":"272","messageId":"273","endLine":14,"endColumn":14},{"ruleId":"270","severity":1,"message":"322","line":15,"column":8,"nodeType":"272","messageId":"273","endLine":15,"endColumn":16},{"ruleId":"270","severity":1,"message":"323","line":20,"column":10,"nodeType":"272","messageId":"273","endLine":20,"endColumn":13},{"ruleId":"270","severity":1,"message":"324","line":20,"column":15,"nodeType":"272","messageId":"273","endLine":20,"endColumn":21},{"ruleId":"308","severity":1,"message":"313","line":48,"column":17,"nodeType":"286","messageId":"310","endLine":48,"endColumn":19},{"ruleId":"308","severity":1,"message":"313","line":50,"column":17,"nodeType":"286","messageId":"310","endLine":50,"endColumn":19},{"ruleId":"308","severity":1,"message":"313","line":52,"column":17,"nodeType":"286","messageId":"310","endLine":52,"endColumn":19},{"ruleId":"308","severity":1,"message":"313","line":54,"column":21,"nodeType":"286","messageId":"310","endLine":54,"endColumn":23},{"ruleId":"308","severity":1,"message":"313","line":56,"column":19,"nodeType":"286","messageId":"310","endLine":56,"endColumn":21},{"ruleId":"308","severity":1,"message":"309","line":58,"column":19,"nodeType":"286","messageId":"310","endLine":58,"endColumn":21},{"ruleId":"270","severity":1,"message":"325","line":2,"column":27,"nodeType":"272","messageId":"273","endLine":2,"endColumn":36},{"ruleId":"270","severity":1,"message":"316","line":4,"column":10,"nodeType":"272","messageId":"273","endLine":4,"endColumn":18},{"ruleId":"270","severity":1,"message":"326","line":6,"column":8,"nodeType":"272","messageId":"273","endLine":6,"endColumn":17},{"ruleId":"270","severity":1,"message":"303","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":19},{"ruleId":"270","severity":1,"message":"296","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":17},{"ruleId":"270","severity":1,"message":"327","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":12},{"ruleId":"270","severity":1,"message":"271","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":17},{"ruleId":"270","severity":1,"message":"328","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":19},{"ruleId":"270","severity":1,"message":"329","line":14,"column":8,"nodeType":"272","messageId":"273","endLine":14,"endColumn":15},{"ruleId":"270","severity":1,"message":"330","line":16,"column":8,"nodeType":"272","messageId":"273","endLine":16,"endColumn":14},{"ruleId":"270","severity":1,"message":"317","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":13},{"ruleId":"270","severity":1,"message":"331","line":26,"column":8,"nodeType":"272","messageId":"273","endLine":26,"endColumn":14},{"ruleId":"270","severity":1,"message":"274","line":28,"column":8,"nodeType":"272","messageId":"273","endLine":28,"endColumn":13},{"ruleId":"270","severity":1,"message":"332","line":29,"column":8,"nodeType":"272","messageId":"273","endLine":29,"endColumn":13},{"ruleId":"270","severity":1,"message":"333","line":102,"column":10,"nodeType":"272","messageId":"273","endLine":102,"endColumn":17},{"ruleId":"270","severity":1,"message":"334","line":102,"column":19,"nodeType":"272","messageId":"273","endLine":102,"endColumn":29},{"ruleId":"308","severity":1,"message":"313","line":220,"column":28,"nodeType":"286","messageId":"310","endLine":220,"endColumn":30},{"ruleId":"308","severity":1,"message":"313","line":225,"column":28,"nodeType":"286","messageId":"310","endLine":225,"endColumn":30},{"ruleId":"270","severity":1,"message":"294","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":11},{"ruleId":"270","severity":1,"message":"300","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":13},{"ruleId":"270","severity":1,"message":"301","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"302","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":24},{"ruleId":"270","severity":1,"message":"303","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":19},{"ruleId":"270","severity":1,"message":"304","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":17},{"ruleId":"270","severity":1,"message":"305","line":16,"column":10,"nodeType":"272","messageId":"273","endLine":16,"endColumn":28},{"ruleId":"270","severity":1,"message":"294","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":11},{"ruleId":"270","severity":1,"message":"296","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":17},{"ruleId":"270","severity":1,"message":"300","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":13},{"ruleId":"270","severity":1,"message":"301","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"302","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":24},{"ruleId":"270","severity":1,"message":"303","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":19},{"ruleId":"270","severity":1,"message":"304","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":17},{"ruleId":"270","severity":1,"message":"305","line":16,"column":10,"nodeType":"272","messageId":"273","endLine":16,"endColumn":28},{"ruleId":"270","severity":1,"message":"332","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":13},{"ruleId":"270","severity":1,"message":"335","line":4,"column":8,"nodeType":"272","messageId":"273","endLine":4,"endColumn":17},{"ruleId":"270","severity":1,"message":"297","line":14,"column":8,"nodeType":"272","messageId":"273","endLine":14,"endColumn":14},{"ruleId":"270","severity":1,"message":"336","line":15,"column":8,"nodeType":"272","messageId":"273","endLine":15,"endColumn":19},{"ruleId":"270","severity":1,"message":"337","line":16,"column":8,"nodeType":"272","messageId":"273","endLine":16,"endColumn":25},{"ruleId":"270","severity":1,"message":"338","line":17,"column":8,"nodeType":"272","messageId":"273","endLine":17,"endColumn":25},{"ruleId":"270","severity":1,"message":"339","line":18,"column":8,"nodeType":"272","messageId":"273","endLine":18,"endColumn":12},{"ruleId":"270","severity":1,"message":"340","line":19,"column":8,"nodeType":"272","messageId":"273","endLine":19,"endColumn":14},{"ruleId":"270","severity":1,"message":"322","line":20,"column":8,"nodeType":"272","messageId":"273","endLine":20,"endColumn":16},{"ruleId":"270","severity":1,"message":"341","line":21,"column":8,"nodeType":"272","messageId":"273","endLine":21,"endColumn":16},{"ruleId":"288","severity":1,"message":"289","line":94,"column":199,"nodeType":"290","endLine":94,"endColumn":215},{"ruleId":"270","severity":1,"message":"342","line":17,"column":27,"nodeType":"272","messageId":"273","endLine":17,"endColumn":31},{"ruleId":"270","severity":1,"message":"293","line":2,"column":9,"nodeType":"272","messageId":"273","endLine":2,"endColumn":17},{"ruleId":"270","severity":1,"message":"299","line":5,"column":8,"nodeType":"272","messageId":"273","endLine":5,"endColumn":14},{"ruleId":"270","severity":1,"message":"297","line":3,"column":8,"nodeType":"272","messageId":"273","endLine":3,"endColumn":14},{"ruleId":"270","severity":1,"message":"329","line":6,"column":8,"nodeType":"272","messageId":"273","endLine":6,"endColumn":15},{"ruleId":"270","severity":1,"message":"343","line":7,"column":8,"nodeType":"272","messageId":"273","endLine":7,"endColumn":12},{"ruleId":"270","severity":1,"message":"296","line":8,"column":8,"nodeType":"272","messageId":"273","endLine":8,"endColumn":17},{"ruleId":"270","severity":1,"message":"300","line":9,"column":8,"nodeType":"272","messageId":"273","endLine":9,"endColumn":13},{"ruleId":"270","severity":1,"message":"301","line":10,"column":8,"nodeType":"272","messageId":"273","endLine":10,"endColumn":18},{"ruleId":"270","severity":1,"message":"302","line":11,"column":8,"nodeType":"272","messageId":"273","endLine":11,"endColumn":24},{"ruleId":"270","severity":1,"message":"303","line":12,"column":8,"nodeType":"272","messageId":"273","endLine":12,"endColumn":19},{"ruleId":"270","severity":1,"message":"304","line":13,"column":8,"nodeType":"272","messageId":"273","endLine":13,"endColumn":17},{"ruleId":"270","severity":1,"message":"305","line":23,"column":10,"nodeType":"272","messageId":"273","endLine":23,"endColumn":28},{"ruleId":"270","severity":1,"message":"306","line":27,"column":10,"nodeType":"272","messageId":"273","endLine":27,"endColumn":22},{"ruleId":"284","severity":1,"message":"285","line":97,"column":30,"nodeType":"286","messageId":"287","endLine":97,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":98,"column":30,"nodeType":"286","messageId":"287","endLine":98,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":105,"column":30,"nodeType":"286","messageId":"287","endLine":105,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":106,"column":30,"nodeType":"286","messageId":"287","endLine":106,"endColumn":45},{"ruleId":"308","severity":1,"message":"313","line":187,"column":22,"nodeType":"286","messageId":"310","endLine":187,"endColumn":24},{"ruleId":"308","severity":1,"message":"309","line":257,"column":40,"nodeType":"286","messageId":"310","endLine":257,"endColumn":42},{"ruleId":"284","severity":1,"message":"285","line":342,"column":99,"nodeType":"286","messageId":"287","endLine":342,"endColumn":119},{"ruleId":"288","severity":1,"message":"289","line":342,"column":228,"nodeType":"290","endLine":342,"endColumn":244},{"ruleId":"288","severity":1,"message":"289","line":344,"column":111,"nodeType":"290","endLine":344,"endColumn":127},"no-native-reassign",["344"],"no-negated-in-lhs",["345"],"no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'nopro' is defined but never used.","'dp' is assigned a value but never used.","'setJodarID' is assigned a value but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.","'addbio' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","use-isnan","Use the isNaN function to compare with NaN.","BinaryExpression","comparisonWithNaN","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Redirect' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'AccountCircle' is defined but never used.","'Dashyy' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'FormatAlignJustify' is defined but never used.","'DATE_COL_DEF' is defined but never used.","'nodemailer' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","unexpected","'dd1' is assigned a value but never used.","'dd2' is assigned a value but never used.","Expected '===' and instead saw '=='.","'useState' is defined but never used.","'makeStyles' is defined but never used.","'DataGrid' is defined but never used.","'Modal' is defined but never used.","'Slider' is defined but never used.","'withStyles' is defined but never used.","'InputLabel' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'sop' is assigned a value but never used.","'setsop' is assigned a value but never used.","'useEffect' is defined but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'Rating' is defined but never used.","'axios' is defined but never used.","'datasci' is assigned a value but never used.","'setDatasci' is assigned a value but never used.","'Dashboard' is defined but never used.","'ButtonGroup' is defined but never used.","'ArrowDropDownIcon' is defined but never used.","'ClickAwayListener' is defined but never used.","'Grow' is defined but never used.","'Popper' is defined but never used.","'MenuList' is defined but never used.","'name' is assigned a value but never used.","'Chip' is defined but never used.","no-global-assign","no-unsafe-negation"]