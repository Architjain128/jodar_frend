[{"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/index.js":"1","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/App.js":"2","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/reportWebVitals.js":"3","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/login.js":"4","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/signup.js":"5","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/landing.js":"6","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/marketplace.js":"7","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/dashboard.js":"8","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recprofile.js":"9","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/appprofile.js":"10","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/aapliboard.js":"11","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recliboard.js":"12","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/addjob.js":"13","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/application.js":"14","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/rectable.js":"15","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recappdash.js":"16","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphome.js":"17","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphometable.js":"18","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/fuzzyse.js":"19","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsop.js":"20","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsee.js":"21","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/applicantmyappli.js":"22","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi.js":"23","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi2.js":"24","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/userdata.js":"25","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apptable.js":"26","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recdashviewacc.js":"27","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp.js":"28","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp2.js":"29"},{"size":500,"mtime":1610134556840,"results":"30","hashOfConfig":"31"},{"size":1806,"mtime":1611339110606,"results":"32","hashOfConfig":"31"},{"size":362,"mtime":1610134556840,"results":"33","hashOfConfig":"31"},{"size":6989,"mtime":1611510925494,"results":"34","hashOfConfig":"31"},{"size":16581,"mtime":1611514117134,"results":"35","hashOfConfig":"31"},{"size":2785,"mtime":1611422173936,"results":"36","hashOfConfig":"31"},{"size":7118,"mtime":1611574583982,"results":"37","hashOfConfig":"31"},{"size":6455,"mtime":1611574578592,"results":"38","hashOfConfig":"31"},{"size":12509,"mtime":1611509613334,"results":"39","hashOfConfig":"31"},{"size":15900,"mtime":1611514037524,"results":"40","hashOfConfig":"31"},{"size":2699,"mtime":1611398962412,"results":"41","hashOfConfig":"31"},{"size":1553,"mtime":1611078232093,"results":"42","hashOfConfig":"31"},{"size":9306,"mtime":1611574690402,"results":"43","hashOfConfig":"31"},{"size":5728,"mtime":1611488200560,"results":"44","hashOfConfig":"31"},{"size":2234,"mtime":1611514353704,"results":"45","hashOfConfig":"31"},{"size":39144,"mtime":1611573759982,"results":"46","hashOfConfig":"31"},{"size":2471,"mtime":1611488062240,"results":"47","hashOfConfig":"31"},{"size":4218,"mtime":1611574713242,"results":"48","hashOfConfig":"31"},{"size":16863,"mtime":1611581472912,"results":"49","hashOfConfig":"31"},{"size":7921,"mtime":1611488290900,"results":"50","hashOfConfig":"31"},{"size":4032,"mtime":1611486796510,"results":"51","hashOfConfig":"31"},{"size":11658,"mtime":1611513992784,"results":"52","hashOfConfig":"31"},{"size":2527,"mtime":1611150220471,"results":"53","hashOfConfig":"31"},{"size":1613,"mtime":1611146683169,"results":"54","hashOfConfig":"31"},{"size":9493,"mtime":1611147818569,"results":"55","hashOfConfig":"31"},{"size":2765,"mtime":1610614334178,"results":"56","hashOfConfig":"31"},{"size":14487,"mtime":1611573223752,"results":"57","hashOfConfig":"31"},{"size":3488,"mtime":1611345947246,"results":"58","hashOfConfig":"31"},{"size":3465,"mtime":1611569896882,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"tj9n1j",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"62"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"62"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":20,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"62"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"62"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"62"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/index.js",[],["130","131"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/App.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/reportWebVitals.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/login.js",["132","133","134","135"],"import React, { Component } from 'react'\nimport { Redirect} from 'react-router-dom';\nimport {Container,Box,Typography,TextField,Button} from '@material-ui/core';\nimport {AccountCircle} from '@material-ui/icons'\nimport axios from 'axios';\nimport '../files/css/login.css'\nimport GooLogin from \"./zzgoogleapi\"\n\nclass Login extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            email:'',\n            password:'',\n            redirect:\"a\",\n            checked:false,\n            login:true,\n            emailerror:false,\n            emailerrormsg:null,\n        }\n        this.onChange=this.onChange.bind(this)\n        this.onCheck=this.onCheck.bind(this)\n        this.onSubmit = this.onSubmit.bind(this);\n        this.validateEmail=this.validateEmail.bind(this)\n\n\n    }\n    validateEmail(e){\n        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (reg.test(e.target.value) == false) \n        {\n            this.setState({emailerrormsg:\"Please enter valid email\",emailerror:true})\n            return false;\n        }\n        else\n        {\n            this.setState({emailerrormsg:null,emailerror:false})\n            return true;\n        }\n    }\n    onChange(event) {\n        let name = event.target.name\n        let value = event.target.value\n        this.setState({[name]: value}, () => {\n            // console.log(this.state)\n        })\n    } \n    onCheck(e){\n        if(this.state.checked === false)\n        this.setState({checked : true})\n        else\n        this.setState({checked : false})\n\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        if(this.state.emailerror === true )\n        {\n            alert(\"Please enter valid data\")\n            return\n        }\n        const newUser = {\n            email: this.state.email,\n            password: this.state.password,\n            checked:this.state.checked,\n        }\n\n        // console.log(newUser)\n        axios.post('http://localhost:6050/login', newUser)\n            .then(res => {\n                // console.log(\"ok\")\n                // console.log(res.data)\n                if(res.data.type === \"r\")\n                this.setState({redirect:\"r\"})\n                if(res.data.type === \"a\")\n                this.setState({redirect:\"a\"})\n                window.alert(res.data.msg)\n                if(res.data.status === '201')\n                {\n                    // console.log(res.data.userdata._id)\n                    localStorage.setItem(\"Jodar_id\", res.data.userdata._id);\n                    localStorage.setItem(\"Jodar_id_type\", res.data.userdata.type);\n                    this.setState({login:false})\n                }\n                else\n                {\n                    alert(\"email or password not matched \")\n                    window.location.reload()\n                }\n            })\n            .catch(err=>{\n                // alert(\"password or email not matched\")\n                // window.location.reload()\n                console.log(err)\n            })\n\n        this.setState({\n            email: '',\n            password: ''\n        });\n    }\n    render() {\n\n        if(!this.state.login){\n            \n            if(this.state.redirect === \"r\"){\n\n                return <Redirect to=\"/marketplace\"></Redirect>\n            }\n            if(this.state.redirect === \"a\")\n            {\n                return <Redirect to=\"/dashboard\"></Redirect>\n            }\n        }\n\n        return (\n            <Container>\n                <Box \n                bgcolor=\"grey\"\n                boxShadow=\"10\"\n                borderColor=\"black\"\n                borderRadius=\"15px\"\n                textAlign=\"center\"\n                p='30px'\n                mt='50px'\n                >\n                    <div>\n                        <AccountCircle id=\"loginicon\" />\n                        <div id=\"logincontainer\">\n                            <Typography component=\"div\" id=\"logintypo\" >\n                            <form onSubmit={this.onSubmit}>\n                                <br/>\n                                <h1>User Login</h1>\n                                        <TextField\n                                        variant=\"standard\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"email\"\n                                        label=\"Email\"\n                                        type=\"text\"\n                                        id=\"email\"\n                                        error = {this.state.emailerror}\n                                        helperText = {this.state.emailerrormsg}\n                                        onBlur = {this.validateEmail}\n                                        onChange = {this.onChange}\n                                        />\n                                        \n                                        <TextField\n                                        variant=\"standard\"\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                        name=\"password\"\n                                        label=\"Password\"\n                                        type=\"password\"\n                                        id=\"password\"\n                                        onChange = {this.onChange}\n                                        />\n                                        <div id=\"tcdiv\">\n                                            <input type=\"checkbox\" checked={this.state.checked} onChange={this.onCheck} id=\"tandcheck\"/> <p id=\"tc\">I agree all <a href=\"/\" id=\"tandc\">terms and conditions.</a></p><br/>\n                                        </div>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            id=\"loginbutton\"\n                                            // className={classes.submit}\n                                            onClick = {this.onSubmit}\n                                            >\n                                            Login\n                                        </Button>\n                                        <br/>\n                                        <br/>\n                                        <GooLogin></GooLogin>\n                            </form> \n                            <p id=\"nouser\">Not a user? <a id=\"tandc\" href=\"/signup\">Sign up</a></p>\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Container>\n        )\n    }\n}\n\nexport default Login\n\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/signup.js",["136","137","138"],"import React, { Component } from 'react'\nimport {Redirect} from 'react-router-dom';\nimport {Container,Box,Typography,TextField,Button,Switch} from '@material-ui/core';\nimport {AccountCircle} from '@material-ui/icons'\nimport axios from 'axios';\nimport '../files/css/signup.css'\nimport GooSignin from \"./zzgoogleapi2\"\n\nclass Signup extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            Firstname:'',\n            Lastname:'',\n            email:'',\n            password:'',\n            type:\"a\",\n            checked:false,\n            switched:false,\n            company_name:'NONE',\n            contact_number:'NONE',\n            redirect:\"r\",\n            sign:true,\n            emailerror:false,\n            emailerrormsg:null,\n            numerror:false,\n            numerrormsg:null,\n        }\n        this.onChange=this.onChange.bind(this)\n        this.onCheck=this.onCheck.bind(this)\n        this.onSwitch=this.onSwitch.bind(this)\n        this.onSubmit=this.onSubmit.bind(this)\n        this.validateEmail=this.validateEmail.bind(this)\n        this.validateCompanynum=this.validateCompanynum.bind(this)\n    }\n    validateEmail(e){\n        var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n        if (reg.test(e.target.value) === false) \n        {\n            this.setState({emailerrormsg:\"Please enter valid email\",emailerror:true})\n        }\n        else\n        {\n            this.setState({emailerrormsg:null,emailerror:false})\n        }\n    }\n    validateCompanynum(e){\n        var reg = /^[0-9]{6,10}$/;\n        if (reg.test(e.target.value) === false) \n        {\n            this.setState({numerrormsg: \"Please enter valid number (length between 6-10 and all whole numbers)\",numerror:true})\n            return false;\n        }\n        else\n        {\n            this.setState({numerrormsg:null,numerror:false})\n            return true;\n        }\n    }\n\n    onChange(event) {\n        let name = event.target.name\n        let value = event.target.value\n        this.setState({[name]: value}, () => {\n            // console.log(this.state)\n        })\n    }\n    onSwitch(event){\n        if(this.state.switched === false)\n        this.setState({switched : true, type:\"r\", company_name:\"\",contact_number:\"\"})\n        else\n        this.setState({switched : false, type :\"a\", company_name:\"NONE\", contact_number:\"NONE\"})\n        \n    }\n    onCheck(event){\n        if(this.state.checked === false)\n        this.setState({checked : true})\n        else\n        this.setState({checked : false})\n    }\n    onSubmit(e) {\n        e.preventDefault();\n        if(this.state.emailerror === true || this.state.numerror === true)\n        {\n            alert(\"Please enter valid data\")\n            return\n        }\n        const newUser = {\n            Firstname: this.state.Firstname,\n            Lastname: this.state.Lastname,\n            email: this.state.email,\n            password: this.state.password,\n            checked:this.state.checked,\n            type: this.state.type,\n            company_name:this.state.company_name,\n            contact_number:this.state.contact_number,\n        }\n        // console.log(newUser)\n        axios.post('http://localhost:6050/signup', newUser)\n            .then(res => {\n                // console.log(\"ok\")\n                // console.log(res.data)\n                if(res.data.type === \"r\")\n                this.setState({redirect:\"r\"})\n                if(res.data.type === \"a\")\n                this.setState({redirect:\"a\"})\n                window.alert(res.data.msg)\n                if(res.data.status===\"201\"){\n                    // console.log(res.data.userdata._id)\n                    localStorage.setItem(\"Jodar_id\", res.data.userdata._id);\n                    localStorage.setItem(\"Jodar_id_type\", res.data.userdata.type);\n                    this.setState({sign:false})\n                }\n                else{\n                    alert(\"Ooops something gone wrong\")\n                    window.location.reload()\n                }\n            })\n            .catch(err=>{\n                // window.location.reload()\n                console.log(err)\n            })\n\n        this.setState({\n            Firstname:'',\n            Lastname:'',\n            email:'',\n            password:'',\n            type:\"a\",\n            checked:false,\n            switched:false,\n            company_name:'NONE',\n            contact_number:'NONE',\n            sign:true\n        });\n    }\n\n    render() {\n        if(!this.state.sign)\n        {\n            if(this.state.redirect === \"a\")\n            return <Redirect to=\"/dashboard\"></Redirect>\n            if(this.state.redirect === \"r\")\n            return <Redirect to=\"/marketplace\"></Redirect>\n        }\n        if(!this.state.switched)\n        {\n            return (\n                <Container>\n                    <Box \n                    bgcolor=\"white\"\n                    boxShadow=\"10\"\n                    borderColor=\"black\"\n                    borderRadius=\"15px\"\n                    textAlign=\"center\"\n                    p='30px'\n                    mt='50px'\n                    >\n                        <div>\n                            <AccountCircle id=\"loginicon\" />\n                            <div id=\"logincontainer\">\n                                <Typography component=\"div\" id=\"logintypo\" >\n                                <form onSubmit={this.onSubmit}>\n                                    <br/>\n                                    <h1>Join us as Applicants</h1>\n                                                <Switch\n                                                    checked={this.state.switched}\n                                                    onChange={this.onSwitch}\n                                                    name=\"switched\"\n                                                    color=\"primary\"\n                                                />\n                                                <label id=\"cat\">Need a 's recruiter account</label>\n                                                \n                                            <TextField\n                                                variant=\"standard\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                name=\"Firstname\"\n                                                label=\"First Name\"\n                                                type=\"text\"\n                                                id=\"Firstname\"\n                                                onChange = {this.onChange}\n                                            />\n                                            <TextField\n                                                variant=\"standard\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                name=\"Lastname\"\n                                                label=\"Last Name\"\n                                                type=\"text\"\n                                                id=\"Lastname\"\n                                                onChange = {this.onChange}\n                                            />\n                                            <TextField\n                                                variant=\"standard\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                name=\"email\"\n                                                label=\"E-Mail\"\n                                                type=\"text\"\n                                                id=\"email\"\n                                                // autoComplete\n                                                error = {this.state.emailerror}\n                                                helperText = {this.state.emailerrormsg}\n                                                onBlur = {this.validateEmail}\n                                                onChange = {this.onChange}\n                                            />\n\n                                            <TextField\n                                                variant=\"standard\"\n                                                margin=\"normal\"\n                                                required\n                                                fullWidth\n                                                name=\"password\"\n                                                label=\"Password\"\n                                                type=\"password\"\n                                                id=\"password\"\n                                                // autoComplete\n                                                onChange = {this.onChange}\n                                            />\n                                            <div id=\"tcdiv\">\n                                                <input type=\"checkbox\" onChange={this.onCheck} checked={this.state.checked} id=\"tandcheck\"/> <p id=\"tc\">I agree all <a href=\"https://pastebin.com/embed_js/KjwiiUhG\" target=\"blank\" id=\"tandc\">terms and conditions.</a></p><br/>\n                                            </div>\n                                            <Button\n                                                type=\"submit\"\n                                                fullWidth\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                id=\"signupbutton\"\n                                                onClick = {this.onSubmit}\n                                                >\n                                                Sign Up\n                                            </Button>\n                                            <br/>\n                                            <br/>\n                                            <GooSignin></GooSignin>\n                                    {/* <input type=\"submit\" id=\"loginbutton\" value=\"Login\" /> */}\n                                </form> \n                                <p id=\"nouser\">Already a user? <a id=\"tandc\" href=\"/login\">Login</a></p>\n                                </Typography>\n                            </div>\n                        </div>\n                    </Box>\n                </Container>\n            )\n    }\n    if(this.state.switched)\n    {\n        return (\n            <Container>\n                <Box \n                bgcolor=\"white\"\n                boxShadow=\"10\"\n                borderColor=\"black\"\n                borderRadius=\"15px\"\n                textAlign=\"center\"\n                p='30px'\n                mt='50px'\n                >\n                    <div>\n                        <AccountCircle id=\"loginicon\" />\n                        <div id=\"logincontainer\">\n                            <Typography component=\"div\" id=\"logintypo\" >\n                            <form onSubmit={this.onSubmit}>\n                                <br/>\n                                <h1>Join us as Recruiter</h1>\n                                                <Switch\n                                                    checked={this.state.switched}\n                                                    onChange={this.onSwitch}\n                                                    name=\"switched\"\n                                                    color=\"primary\"\n                                                />\n                                                <label id=\"cat\">Need a applicants's account</label>\n                                                \n                                        <TextField\n                                            variant=\"standard\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            name=\"email\"\n                                            label=\"E-Mail\"\n                                            type=\"text\"\n                                            id=\"email\"\n                                            // autoComplete\n                                            error = {this.state.emailerror}\n                                            helperText = {this.state.emailerrormsg}\n                                            onBlur = {this.validateEmail}\n                                            onChange = {this.onChange}\n                                        />\n                                        <TextField\n                                            variant=\"standard\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            name=\"password\"\n                                            label=\"Password\"\n                                            type=\"password\"\n                                            id=\"password\"\n                                            onChange = {this.onChange}\n                                        />\n                                    <TextField\n                                            variant=\"standard\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            name=\"company_name\"\n                                            label=\"Company Name\"\n                                            type=\"company_name\"\n                                            id=\"company_name\"\n                                            onChange = {this.onChange}\n                                    />\n                                    <TextField\n                                            variant=\"standard\"\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                            name=\"contact_number\"\n                                            label=\"Contact Number\"\n                                            type=\"contact_number\"\n                                            id=\"contact_number\"\n                                            error = {this.state.numerror}\n                                            helperText = {this.state.numerrormsg}\n                                            onBlur = {this.validateCompanynum}\n                                            onChange = {this.onChange}\n                                    />\n                                        <div id=\"tcdiv\">\n                                            <input type=\"checkbox\" onChange={this.onCheck} checked={this.state.checked}  id=\"tandcheck\"/> <p id=\"tc\">I agree all <a href=\"https://pastebin.com/embed_js/KjwiiUhG\" target=\"blank\" id=\"tandc\">terms and conditions.</a></p><br/>\n                                        </div>\n                                        <Button\n                                            type=\"submit\"\n                                            fullWidth\n                                            variant=\"contained\"\n                                            color=\"primary\"\n                                            id=\"signupbutton\"\n                                            // className={classes.submit}\n                                            onClick = {this.onSubmit}\n                                            >\n                                            Sign Up\n                                        </Button>\n                                        <br/>\n                                        <br/>\n                                        <GooSignin></GooSignin>\n\n                            </form> \n                            <p id=\"nouser\">Already a user? <a id=\"tandc\" href=\"/login\">Login</a></p>\n                            </Typography>\n                        </div>\n                    </div>\n                </Box>\n            </Container>\n        )\n    }\n    }\n}\n\n\n\nexport default Signup","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/landing.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/marketplace.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/dashboard.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recprofile.js",["139","140","141","142","143","144","145","146","147","148","149","150","151","152"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Modal from '@material-ui/core/Modal';\nimport nopro from \"../files/images/noprofile.jpg\"\nimport axios from 'axios';\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n  media: {\n    height:0,\n    paddingTop: '56.25%', // 16:9\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nexport default function Recprofile(props) {\n  const classes = useStyles();\n  const [open3, setOpen3] = React.useState(false);\n  const [dp, setdp] = React.useState(null);\n  const [modalStyle] = React.useState(getModalStyle);\n  const [jodar_id, setJodarID] = React.useState(localStorage.getItem(\"Jodar_id\"));\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [values, setValues] = React.useState({\n    biobio: '',\n    cna : \"\",\n    cnu : \"\",\n    ena : \"\",\n    enaerr : false,\n    enaerrmsg : null,\n    cnuerr : false,\n    cnuerrmsg : null,\n  });\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n  const handleOpen3 = () => {\n    setValues({ ...values, ena:\"\",can:\"\",cnu:\"\"});\n    setOpen3(true);\n  };\n\n  const handleClose3 = () => {\n    setOpen3(false);\n    setValues({ ...values, ena:\"\",can:\"\",cnu:\"\"});\n  };\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const handleOpen2 = () => {\n    setOpen2(true);\n  };\n\n  const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n  const validateEmail=(e)=>{\n    var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n    if( e.target.value.trim() === \"\")\n    {\n      setValues({ ...values, enaerr: false , enaerrmsg : null });\n    }\n    else if (reg.test(e.target.value) == false) \n    {\n      setValues({ ...values, enaerr: true , enaerrmsg : \"Please enter valid email\" });\n    }\n    else\n    {\n      setValues({ ...values, enaerr: false , enaerrmsg : null });\n    }\n  }\n  const validateCompanynum=(e)=>{\n    var reg = /^[0-9]{6,10}$/;\n    if( e.target.value.trim() === \"\")\n    {\n      setValues({ ...values, cnuerr: false , cnuerrmsg : null });\n    }\n    else if (reg.test(e.target.value) == false) \n    {\n      setValues({ ...values, cnuerr: true , cnuerrmsg : \"Please enter valid number (length between 6-10 and all whole numbers)\" });\n    }\n    else\n    {\n      setValues({ ...values, cnuerr: false , cnuerrmsg : null });\n    }\n  }\n  const onupdatepro= ()=>{\n    if(values.enaerr === true || values.cnuerr === true)\n        {\n            alert(\"Please enter valid data\")\n            return\n        }\n    const newedu = {\n      UserId : jodar_id,\n      Companyname : values.cna,\n      Companynum : values.cnu,\n      email : values.ena,\n    }\n    console.log(newedu)\n        axios.put('http://localhost:6050/upprofile', newedu)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n    setOpen3(false);\n    setValues({ ...values, ena:\"\",can:\"\",cnu:\"\"});\n  }\n\n  const onbioSubmit =()=>{\n    const newbio = {\n      UserId : jodar_id,\n      Bio : values.biobio,\n    }\n    console.log(newbio)\n        axios.post('http://localhost:6050/addbio', newbio)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n    setOpen(false);\n  }\n\n  const onupSubmit =()=>{\n    const newbio = {\n      UserId : jodar_id,\n      Bio : values.biobio,\n    }\n    console.log(newbio)\n        axios.put('http://localhost:6050/upbio/'+jodar_id, newbio)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n    setOpen2(false);\n  }\n\n  const addbio=(\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Add a Bio</h2>\n      <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        required\n        multiline\n        name=\"new_skill\"\n        label=\"Enter Bio\"\n        type=\"text\"\n        id=\"new_skill\"\n        onChange = {handleChange('biobio')}\n        />\n      <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      id=\"addbio\"\n      onClick = {onbioSubmit}\n      >Add Bio</Button>\n    </div>\n  )\n  const upbio=(\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Add a new Bio</h2>\n      <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        required\n        multiline\n        name=\"new_skill\"\n        label=\"Enter Bio\"\n        type=\"text\"\n        id=\"new_skill\"\n        onChange = {handleChange('biobio')}\n        />\n      <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      id=\"addbio\"\n      onClick = {onupSubmit}\n      >Update Bio</Button>\n    </div>\n  )\n\n  const updatepro = (\n    <div style={modalStyle} className={classes.paper}>\n    <h2 id=\"simple-modal-title\">Update Profile</h2>\n    <TextField\n      variant=\"standard\"\n      margin=\"normal\"\n      name=\"new_edu\"\n      label=\"Company Name\"\n      type=\"text\"\n      id=\"new_edu\"\n      onChange = {handleChange('cna')}\n      />\n      <TextField\n      variant=\"standard\"\n      margin=\"normal\"\n      name=\"new_edus\"\n      label=\"Company Number\"\n      type=\"text\"\n      id=\"new_edus\"\n      error = {values.cnuerr}\n      helperText = {values.cnuerrmsg}\n      onBlur = {validateCompanynum}\n      onChange = {handleChange('cnu')}\n      />\n      <TextField\n      variant=\"standard\"\n      margin=\"normal\"\n      name=\"new_edue\"\n      label=\"Email\"\n      error = {values.enaerr}\n      helperText = {values.enaerrmsg}\n      onBlur = {validateEmail}\n      type=\"text\"\n      id=\"new_edue\"\n      onChange = {handleChange('ena')}\n      />\n      <br/>\n      <br/>\n    <Button\n    type=\"submit\"\n    variant=\"contained\"\n    color=\"primary\"\n    id=\"addedu\"\n    onClick = {onupdatepro}\n    >Update</Button>\n  </div>\n  )\n\nconst bio=(\n  <div>\n      \n        <Box\n        boxShadow=\"1\"\n        borderRadius={12}\n        textAlign=\"center\"\n        p='10px'\n        >\n            <Typography variant=\"h6\">Bio</Typography>\n            <Divider/>\n            <Divider/>\n            <br/>\n            <Typography>{props.data2}</Typography>\n            <br/>\n        <Chip clickable=\"true\"  onClick={handleOpen2} color=\"primary\" avatar={<Avatar>+</Avatar>} label=\"Update Bio\"/>\n        <Modal\n        open={open2}\n        onClose={handleClose2}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        >\n        {upbio}\n        </Modal>\n          </Box>\n    \n    {/* {\n      !props.data2.Bio &&\n      <div>\n        <Box\n        boxShadow=\"1\"\n        borderRadius={12}\n        textAlign=\"center\"\n        p='10px'\n        >\n            <Typography variant=\"h6\">Bio</Typography>\n            <Divider/>\n            <Divider/>\n            <br/>\n              <Chip variant=\"outlined\" color=\"secondary\"  label=\"None\" />\n              <br/>\n              <br/>\n              <Chip clickable=\"true\"  onClick={handleOpen} color=\"primary\" avatar={<Avatar>+</Avatar>} label=\"Add Bio\" />\n              <br/>\n              <br/>\n          </Box>\n        <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        >\n        {addbio}\n        </Modal>\n      </div>\n    } */}\n  </div>\n)\nconst imgadd=(e)=>{\n  setdp(e.target.files[0])\n  console.log(e.target.files[0])\n  const formData = new FormData();        \n  formData.append('dp', e.target.files[0]);\n  axios.post('http://localhost:6050/addimg/'+jodar_id, formData)\n          .then(res => {\n              console.log(\"ok\")\n              console.log(res.data)\n              alert(res.data.msg)\n              window.location.reload()\n          })\n          .catch(err=>{\n              console.log(err)\n              alert(\"error\")\n          })\n}\n\n\n\n  return (\n      <Container>\n    <div className={classes.root}>\n        <div>\n      <Card>\n        {/* <CardMedia\n            className={classes.media}\n        > */}\n        <img src={props.dataimg} style={{width:400,height:400}}/>\n        {/* </CardMedia> */}\n        <CardActions>\n        <label disabled>\n          Change Profile Image\n        </label>\n        <input onChange={imgadd} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n        </CardActions>\n      </Card>\n      </div>\n      {/* <div> */}\n      <Box color='#fafafa'>\n        <Typography variant=\"caption\">Account made on</Typography>\n        <Typography variant=\"h5\">{props.data1[3]}</Typography>\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">Company Name</Typography>\n        <Typography variant=\"h5\">{props.data1[0]}</Typography>\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">Email</Typography>\n        <Typography variant=\"h5\">{props.data1[2]}</Typography>\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">Contact Namber</Typography>\n        <Typography variant=\"h5\">{props.data1[1]}</Typography>\n      </Box>\n            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n                {/* <TextField\n                disabled\n                label=\"Company Name\"\n                id=\"companyame\"\n                variant=\"filled\"\n                defaultValue={props.data1[0]}\n                /><br/><br/>\n                <TextField\n                disabled\n                label=\"Email\"\n                id=\"email\"\n                variant=\"filled\"\n                defaultValue={props.data1[2]}\n                />\n                <br/><br/>\n                <TextField\n                disabled\n                label=\"Contact Number\"\n                id=\"contact_number\"\n                variant=\"filled\"\n                defaultValue={props.data1[2]}\n                />\n                <br/>\n                <br/> */}\n            <div>\n              {bio}\n            </div>\n            </FormControl>\n    </div>\n    <br/><br/><br/><Divider/><br/><br/>\n                <Button onClick={handleOpen3} variant=\"contained\" color=\"secondary\" component=\"span\">Edit Profile</Button>\n                <Modal\n                open={open3}\n                onClose={handleClose3}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n                {updatepro}\n                </Modal>\n                <br/><br/><br/><br/><br/><br/><br/>\n    </Container>\n  );\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/appprofile.js",["153","154","155","156","157","158","159","160","161","162"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport FormControl from '@material-ui/core/FormControl';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\nimport Button from '@material-ui/core/Button';\nimport CardActions from '@material-ui/core/CardActions';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport Box from '@material-ui/core/Box';\nimport Avatar from '@material-ui/core/Avatar';\nimport Chip from '@material-ui/core/Chip';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport Rating from '@material-ui/lab/Rating';\nimport { withStyles } from '@material-ui/core/styles';\nimport axios from 'axios';\n\n\nfunction getModalStyle() {\n  const top = 50 ;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"rgb(78,94,186)\",\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  root1: {\n    '& > *': {\n      margin: theme.spacing(0.5),\n    },\n  },\n  margin: {\n    margin: theme.spacing(1),\n  },\n  withoutLabel: {\n    marginTop: theme.spacing(3),\n  },\n  textField: {\n    width: '25ch',\n  },\n  media: {\n    height:0,\n    paddingTop: '56.25%', // 16:9\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  table: {\n    minWidth: 600,\n  },\n}));\n\n\n\n\nexport default function Appprofile(props) {\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [jodar_id, setJodarID] = React.useState(localStorage.getItem(\"Jodar_id\"));\n  const [open, setOpen] = React.useState(false);\n  const [open2, setOpen2] = React.useState(false);\n  const [open3, setOpen3] = React.useState(false);\n  const [dp, setdp] = React.useState(null);\n  const [values, setValues] = React.useState({\n    specy : \"\",\n    edu : \"\",\n    edus : \"\",\n    edue : \"present\",\n    fna : \"\",\n    lna : \"\",\n    ena : \"\",\n    enaerr : false,\n    enaerrmsg : null,\n    // prorating: 3,\n  });\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const handleOpen2 = () => {\n    setOpen2(true);\n  };\n\n  const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n  const handleOpen3 = () => {\n    setOpen3(true);\n  };\n\n  const handleClose3 = () => {\n    setOpen3(false);\n  };\n\n  const handleChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value });\n  };\n\n  const onskillSubmit =()=>{\n    const newskill = {\n      UserId : jodar_id,\n      Spec : values.specy,\n    }\n    console.log(newskill)\n        axios.post('http://localhost:6050/addskill', newskill)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n    setOpen(false);\n  }\n  const oneduSubmit =()=>{\n    const newedu = {\n      UserId : jodar_id,\n      Edu : values.edu,\n      Edus : values.edus,\n      Edue : values.edue,\n    }\n    console.log(newedu)\n        axios.post('http://localhost:6050/addedu', newedu)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n    setOpen2(false);\n  }\n\n  const onupdatepro= ()=>{\n    if(values.enaerr === true)\n    {\n        alert(\"Please enter valid data\")\n        return\n    }\n    const newedu = {\n      UserId : jodar_id,\n      Firstname : values.fna,\n      Lastname : values.lna,\n      email : values.ena,\n    }\n    console.log(newedu)\n        axios.put('http://localhost:6050/uppro', newedu)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n    setOpen3(false);\n  }\n  const validateEmail=(e)=>{\n    var reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n    if( e.target.value.trim() === \"\")\n    {\n      setValues({ ...values, enaerr: false , enaerrmsg : null });\n    }\n    else if (reg.test(e.target.value) == false) \n    {\n      setValues({ ...values, enaerr: true , enaerrmsg : \"Please enter valid email\" });\n    }\n    else\n    {\n      setValues({ ...values, enaerr: false , enaerrmsg : null });\n    }\n  }\n\n  const skill =(\n    <div className={classes.root1}>\n      {props.data3.map(name => (\n      <Chip variant=\"outlined\" color=\"default\" size=\"small\" label={name} />\n      ))}\n      {\n      !props.data3.length &&\n      <Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" />\n      }\n\n    </div>\n  )\n  const educationy =(\n    <div className={classes.root1}>\n\n      <TableContainer component={Paper}>\n      <Table className={classes.table} aria-label=\"customize table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Institution Name</StyledTableCell>\n            <StyledTableCell align=\"right\">Start Date(YYYY)</StyledTableCell>\n            <StyledTableCell align=\"right\">End Date(YYYY)</StyledTableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n            {props.data4.map((row) => (\n              <StyledTableRow>\n                  <StyledTableCell >{row.Edu}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Edus}</StyledTableCell>\n                  <StyledTableCell align=\"right\">{row.Edue}</StyledTableCell>\n              </StyledTableRow>\n            ))}\n            {\n              !props.data4.length &&\n              <StyledTableRow>\n                  <StyledTableCell ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n                  <StyledTableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></StyledTableCell>\n              </StyledTableRow>\n              \n            }\n        </TableBody>\n      </Table>\n    </TableContainer>\n    </div>\n  )\n  const addskill = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Add a skill</h2>\n      <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        required\n        name=\"new_skill\"\n        label=\"Enter new Skill\"\n        type=\"text\"\n        id=\"new_skill\"\n        onChange = {handleChange('specy')}\n        />\n      <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      id=\"addskill\"\n      onClick = {onskillSubmit}\n      >Add skill</Button>\n    </div>\n  )\n\n  const addedu = (\n    <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Add a Eduction Instance</h2>\n      <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        required\n        name=\"new_edu\"\n        label=\"Enter Institution Name\"\n        type=\"text\"\n        id=\"new_edu\"\n        onChange = {handleChange('edu')}\n        />\n        <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        required\n        name=\"new_edus\"\n        label=\"Start Year (YYYY)\"\n        type=\"text\"\n        id=\"new_edus\"\n        onChange = {handleChange('edus')}\n        />\n        <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        name=\"new_edue\"\n        label=\"End Year (YYYY/present)\"\n        type=\"text\"\n        id=\"new_edue\"\n        onChange = {handleChange('edue')}\n        />\n        <br/>\n        <br/>\n      <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      id=\"addedu\"\n      onClick = {oneduSubmit}\n      >Add instance</Button>\n    </div>\n  )\n\n    const updatepro = (\n      <div style={modalStyle} className={classes.paper}>\n      <h2 id=\"simple-modal-title\">Update Profile</h2>\n      <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        name=\"new_edu\"\n        label=\"First Name\"\n        type=\"text\"\n        id=\"new_edu\"\n        onChange = {handleChange('fna')}\n        />\n        <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        name=\"new_edus\"\n        label=\"Last Name\"\n        type=\"text\"\n        id=\"new_edus\"\n        onChange = {handleChange('lna')}\n        />\n        <TextField\n        variant=\"standard\"\n        margin=\"normal\"\n        name=\"new_edue\"\n        label=\"Email\"\n        error = {values.enaerr}\n        helperText = {values.enaerrmsg}\n        onBlur = {validateEmail}\n        type=\"text\"\n        id=\"new_edue\"\n        onChange = {handleChange('ena')}\n        />\n        <br/>\n        <br/>\n      <Button\n      type=\"submit\"\n      variant=\"contained\"\n      color=\"primary\"\n      id=\"addedu\"\n      onClick = {onupdatepro}\n      >Update</Button>\n    </div>\n    )\n\n\n  const imgadd=(e)=>{\n    setdp(e.target.files[0])\n    console.log(e.target.files[0])\n    const formData = new FormData();        \n    formData.append('dp', e.target.files[0]);\n    axios.post('http://localhost:6050/addimg/'+jodar_id, formData)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n  }\n  const pdfadd=(e)=>{\n    setdp(e.target.files[0])\n    console.log(e.target.files[0])\n    const formData = new FormData();        \n    formData.append('dp', e.target.files[0]);\n    axios.post('http://localhost:6050/addpdf/'+jodar_id, formData)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                alert(res.data.msg)\n                window.location.reload()\n            })\n            .catch(err=>{\n                console.log(err)\n                alert(\"error\")\n            })\n  }\n  console.log(props)\n  return (\n      <Container>\n    <div className={classes.root}>\n        <div>\n      <Card>\n        <img src={props.data2[1]} style={{width:400,height:400}}/>\n        {/* </CardMedia> */}\n        <CardActions>\n        <label disabled>\n          Change Profile Image\n        </label>\n        <input onChange={imgadd} className={classes.input} id=\"icon-button-file\" type=\"file\" />\n        </CardActions>\n      </Card>\n      </div>\n      <Box color='#fafafa'>\n        <Typography variant=\"caption\">Account made on</Typography>\n        <Typography variant=\"h5\">{props.data1[3]}</Typography>\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">Rating</Typography>\n        {\n          (props.data2[0] === \"NaN\" || props.data2[0] === NaN || props.data2[0] === 0) ? <Typography> Not Rated Yet </Typography> : <Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={props.data2[0]} readOnly />\n        }\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">Email</Typography>\n        <Typography variant=\"h5\">{props.data1[2]}</Typography>\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">First Name</Typography>\n        <Typography variant=\"h5\">{props.data1[0]}</Typography>\n      </Box>\n      <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px',width:500}}>\n        <Typography variant=\"caption\">Last Name</Typography>\n        <Typography variant=\"h5\">{props.data1[1]}</Typography>\n      </Box> \n                <div>\n\n                <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n                    <Box\n                    boxShadow=\"1\"\n                    borderRadius={12}\n                    textAlign=\"center\"\n                    p='10px'\n                    >\n                    <Typography variant=\"h4\">Education</Typography>\n                    <Divider></Divider><br/>\n                      {educationy}\n                      <br/>\n                      <Chip clickable=\"true\"  onClick={handleOpen2} color=\"primary\" avatar={<Avatar>+</Avatar>} label=\"Add\" size=\"small\"/>\n                      <Modal\n                      open={open2}\n                      onClose={handleClose2}\n                      aria-labelledby=\"simple-modal-title\"\n                      aria-describedby=\"simple-modal-description\"\n                      >\n                      {addedu}\n                      </Modal>\n                    </Box>\n                </FormControl>\n                <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n                    <Box\n                    boxShadow=\"1\"\n                    borderRadius={12}\n                    textAlign=\"center\"\n                    p='10px'\n                    >\n                    <Typography variant=\"h4\">Skills</Typography>\n                    <Divider></Divider><br/>\n                    {skill}\n                    <br/>\n                    <Chip clickable=\"true\"  onClick={handleOpen} color=\"primary\" avatar={<Avatar>+</Avatar>} label=\"Add\" size=\"small\"/>\n                    <Modal\n                    open={open}\n                    onClose={handleClose}\n                    aria-labelledby=\"simple-modal-title\"\n                    aria-describedby=\"simple-modal-description\"\n                    >\n                    {addskill}\n                    </Modal>\n                    </Box>\n                </FormControl>\n                <br/>\n                <br/>\n                <iframe src={props.data2[2]} width=\"400\" height=\"400\"></iframe>\n                <Typography >Upload Resume</Typography>\n                <Typography ><input onChange={pdfadd} className={classes.input} id=\"icon-button-file\" type=\"file\" /></Typography>\n                <br/><br/><br/><Divider/><br/>\n                <br/>\n                <Button onClick={handleOpen3} variant=\"contained\" color=\"secondary\" component=\"span\">Edit Profile</Button>\n                <Modal\n                open={open3}\n                onClose={handleClose3}\n                aria-labelledby=\"simple-modal-title\"\n                aria-describedby=\"simple-modal-description\"\n                >\n                {updatepro}\n                </Modal>\n      </div>\n    </div>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n    </Container>\n  );\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/aapliboard.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recliboard.js",["163","164","165","166","167","168"],"import React, { Component } from 'react'\nimport { Redirect} from 'react-router-dom';\nimport {Container,Box,Typography,TextField,Button} from '@material-ui/core';\nimport {AccountCircle} from '@material-ui/icons'\nimport axios from 'axios';\nimport Marketplace from './marketplace';\n\n\n\nclass Recliboard extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            userid:localStorage.getItem(\"Jodar_id\"),\n            data1:\"\",\n            data2:[],\n            dataimg:\"\",\n        }\n        this.getinfo = this.getinfo.bind(this);\n    }\n    getinfo = async () =>{\n        // alert(\"ok\")\n        const d1 = await axios.get('http://localhost:6050/user/'+this.state.userid)\n        const d2 = await axios.get('http://localhost:6050/bio/'+this.state.userid)\n        const dimg = await axios.get('http://localhost:6050/getimg/'+this.state.userid)\n        const dd1 = [];\n        const dd2 = [];\n        dd1.push(d1.data.data1.company_name)\n        dd1.push(d1.data.data1.contact_number)\n        dd1.push(d1.data.data1.email)\n        dd1.push(d1.data.data1.signup_time)\n        console.log(d2)\n        dd2.push(d2.data.data2.Bio)\n        this.setState({data1:dd1,data2:dd2,dataimg:dimg.data.proimg})\n    }\n\n    async componentDidMount(){\n        this.getinfo()\n    }\n    render() {\n\n        return (\n            <Container>\n                <Marketplace data1={this.state.data1} data2={this.state.data2} dataimg={this.state.dataimg} ></Marketplace>\n            </Container>\n        )\n    }\n}\n\nexport default Recliboard\n\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/addjob.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/application.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/rectable.js",["169","170"],"import * as React from 'react';\nimport {Redirect} from 'react-router-dom'\nimport  {DataGrid}  from '@material-ui/data-grid';\nimport Button from '@material-ui/core/Button';\nimport Dashyy from './recappdash';\n\nexport default function DataTable(props) {\n  const columns = [\n    { field: 'Title', headerName: 'Title', description: 'Title of job posted',width: 150,headerAlign: 'center' },\n    { field: 'Maxappli', headerName: 'Max Applicants',headerAlign: 'center',description: 'Maximunm application that can be applied', type : 'number', width: 150  },\n    { field: 'Maxposi', headerName: 'Max Positions',headerAlign: 'center', type :'number',description: 'Maximun accepted application', width: 150 },\n    { field: 'Ondate', headerName: 'Posted On',headerAlign: 'center',description: 'Date of creating listing', width: 150 },\n    { field: 'id', headerName: 'Options', hide: true ,headerAlign: 'center'},\n    {\n      field: \"none\",\n      headerName: \"Options\",\n      headerAlign: 'center',\n      width: 150,\n      description: 'Click corresponding button to update,delete or view this in detail',\n      disableClickEventBubbling: true,\n      renderCell: (params: CellParams) => {\n        const onClick = () => {\n          const api: GridApi = params.api;\n          const fields = api\n            .getAllColumns()\n            .map((c) => c.field)\n            .filter((c) => c !== \"__check__\" && !!c);\n          const thisRow = {};\n  \n          fields.forEach((f) => {\n            thisRow[f] = params.getValue(f);\n          });\n          localStorage.setItem('Jodar_joblist',thisRow.id)\n          // return alert(thisRow.id);\n          window.location.href='/joblist'\n        };\n  \n        return <Button onClick={onClick} width='140' color=\"primary\" variant=\"contained\">View</Button>;\n      }\n    },\n  ];\nconst anty = [];\n  for(let i=0;i<props.dataalljob.length;i++)\n  {\n      const p = props.dataalljob[i]\n      console.log(p)\n      const pa = {id:p[\"_id\"],Title:p[\"Title\"],Maxappli:p[\"Maxappli\"],Maxposi:p[\"Maxposi\"],Ondate:p[\"Ondate\"]}\n      console.log(pa)\n      anty.push(pa)\n  }\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGrid rows={anty} columns={columns}  autoPageSize onCellClick />\n    </div>\n  );\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recappdash.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphome.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apphometable.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/fuzzyse.js",["191","192","193","194","195","196","197","198","199","200","201","202","203","204","205","206","207","208"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsop.js",["209","210","211","212","213","214","215"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport { FormatAlignJustify } from '@material-ui/icons';\n\nexport default class Dashyy extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         bid:localStorage.getItem('Jodar_jobapp'),\n         comname:\"\",\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         title:\"\",\n         des:\"\",\n         maxappz:\"\",\n         maxposz:\"\",\n         deadlinez:\"\",\n         maxapp:\"\",\n         maxpos:\"\",\n         deadline:\"\",\n         jtype:\"\",\n         jdur:\"\",\n         sala:\"\",\n         skilltok:[],\n         stateofpur:\"\",\n         applybutton:false,\n         button:false,\n        }\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.onapplyjob=this.onapplyjob.bind(this)\n    this.backMA=this.backMA.bind(this)\n    this.handleChange=this.handleChange.bind(this)\n }\n getjobinfo = async () =>{\n    const d2 = await axios.get('http://localhost:6050/getjob/'+this.state.bid)\n    const dap = await axios.get('http://localhost:6050/myappli/'+this.state.jodar_id)\n    // const dac = await axios.get('http://localhost:6050/myapplicur/'+this.state.jodar_id)\n    const reappli=dap.data.dap\n    // const reappcu=dac.data.dac\n\n    if(reappli>=10 )\n    {\n        alert(\"Can't apply due to your max open application limit reached\")\n        window.location.href='/dashboard'\n    }\n\n    const sktok = d2.data.data5.Skill_Req.split(\";\");\n    this.setState({skilltok:sktok,comname:d2.data.data5.Company_name,title:d2.data.data5.Title,deadline:d2.data.data5.Deadline,des:d2.data.data5.Descri,maxapp:d2.data.data5.Maxappli,maxpos:d2.data.data5.Maxposi,jtype:d2.data.data5.Job_Type,jdur:d2.data.data5.Job_Dura,sala:d2.data.data5.Job_Sal})\n}\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\nbackMA(){\n    window.location.href='/dashboard'\n}\nhandleChange = (event) => {\n    let value = event.target.value\n    this.setState({stateofpur: value}, () => {\n        console.log(this.state)\n    })\n};\n\nonapplyjob(e){\n    e.preventDefault();\n    let okokok=false\n    let newDate = new Date()\n    let adate = newDate.getDate();\n    let amonth = newDate.getMonth() + 1;\n    let ayear = newDate.getFullYear();\n    let ahour = newDate.getHours();\n    let aminutes = newDate.getMinutes();\n    let deadd=this.state.deadline.split(\" \");\n    let datede = deadd[0].split(\"/\");\n    let timede = deadd[1].split(\":\");\n    \n    if(parseInt(datede[2]) >= parseInt(ayear))\n    {\n      okokok = true\n    }\n    else\n    {\n        if(parseInt(datede[1]) >= parseInt(amonth))\n        {\n            okokok = true\n\n        }\n        else\n        {\n          if(parseInt(datede[0]) >= parseInt(adate))\n          {\n            okokok = true\n            \n          }\n          else\n          {\n            if(parseInt(timede[0]) >= parseInt(ahour))\n            {\n                okokok = true\n\n            }\n            else\n            {\n              if(parseInt(timede[1]) >= parseInt(aminutes))\n              {\n                okokok = true\n                  \n              }\n            }\n          }\n        }\n    }\n\n    if(okokok===false)\n    {\n        alert(\"Can't apply due to deadline\")\n    }\n    else\n    {\n        let datee = new Date();\n        let dated = (\"0\" + datee.getDate()).slice(-2);\n        let month = (\"0\"+(datee.getMonth() +1)).slice(-2) ;\n        let yeard = (\"0\"+datee.getFullYear()).slice(-4);\n        let horus = (\"00\"+datee.getHours()).slice(-2);\n        let minite = (\"00\"+datee.getMinutes()).slice(-2);\n        let dtstr = dated + \"/\" + month + \"/\" + yeard + \" \"+horus + \":\" + minite\n        const newlistjob = {\n            JobId : this.state.bid,\n            UserId : this.state.jodar_id,\n            Company_name : this.state.comname,\n            Title : this.state.title,\n            Datejoon : dtstr,\n            Datejoin : \"None\",\n            Job_Sal : this.state.sala,\n            Rating : 0 ,\n            Status : \"pending\",\n            Sop:this.state.stateofpur,\n        }\n        console.log(newlistjob)\n\n        axios.post('http://localhost:6050/jobindash', newlistjob)\n            .then(res => {\n                console.log(\"ok\")\n                console.log(res.data)\n                if(res.data.status===\"201\"){\n                    alert(\"applied\")\n                    window.location.href=\"/dashboard\"\n                }\n                else{\n                    alert(res.data.msg)\n                window.location.reload()\n                }\n            })\n            .catch(err=>{\n                console.log(err)\n            })\n    }\n}\n\nrender (){\n\n  return (\n        <Container>\n            <br/>\n            <Button onClick={this.backMA} color=\"primary\" variant=\"contained\">Back to Dashboard</Button>\n        \n            <br/>\n            <br/>\n            <Paper elevation={3} >\n                <Typography variant=\"h4\"><b>Recrutier </b>{this.state.comname}</Typography><br/>\n                <Typography variant=\"h5\">{this.state.title}</Typography><br/>\n                <Typography variant=\"body1\"><b>Deadline</b> {this.state.deadline}</Typography><br/>\n                <Typography variant=\"body2\">{this.state.des}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Max applications</b> {this.state.maxapp}</Typography><br/>\n                <Typography variant=\"overline\"><b>Max positions</b> {this.state.maxpos}</Typography><br/>\n                <Typography variant=\"overline\"><b>Skills Required </b> {this.state.skilltok.map(name => (<Chip variant=\"outlined\" color=\"default\" size=\"small\" label={name} />))}</Typography><br/>\n                <Typography variant=\"overline\"><b>Salary</b> {this.state.sala}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Job Type  </b> \n                { \n                    this.state.jtype===1 ? <>Full Time</> : this.state.jtype===2 ? <>Part Time</> :this.state.jtype===3 ? <>Work From Home</> : null\n                }\n                </Typography><br/>\n                <Typography variant=\"overline\"><b>Job Duration </b> \n                {\n                    this.state.jdur === 1 ? <>1 month</> : this.state.jdur === 2 ? <>2 months</> :this.state.jdur === 3 ? <>3 months</> :this.state.jdur === 4 ? <>4 months</> : this.state.jdur === 5 ? <>5 months</> : this.state.jdur === 6 ? <>6 months</> : <>Indefinite</>\n                }\n                </Typography><br/>\n                <Typography variant=\"overline\"><b>Rating</b> {this.state.points}</Typography><br/>\n\n            </Paper>\n            <br/>\n            <br/>\n\n            <Paper>\n                <br/>\n                <Typography variant=\"body2\">enter statement of purpose in textbox and smash apply</Typography>\n                <br/>\n                <br/>\n                <TextField variant=\"outlined\"  multiline inputProps={{ maxLength: 250 }} label=\"Not more than 250 words\" name=\"soppp\" onChange={this.handleChange}></TextField>\n                <br/>\n                <br/>\n                    <Button onClick={this.onapplyjob} color=\"primary\"  variant=\"contained\">Apply</Button> \n                <br/>\n                <br/>\n            </Paper>\n    \n            <br/>\n            <br/>\n\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/jobsee.js",["216","217","218","219","220","221","222","223"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport { FormatAlignJustify } from '@material-ui/icons';\n\nexport default class Dashyy extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         bid:localStorage.getItem('Jodar_jobapp'),\n         comname:\"\",\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         title:\"\",\n         des:\"\",\n         maxappz:\"\",\n         maxposz:\"\",\n         deadlinez:\"\",\n         maxapp:\"\",\n         maxpos:\"\",\n         deadline:\"\",\n         jtype:\"\",\n         jdur:\"\",\n         sala:\"\",\n         skilltok:[],\n         stateofpur:\"\",\n       \n        }\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.backMA=this.backMA.bind(this)\n }\n getjobinfo = async () =>{\n    const d2 = await axios.get('http://localhost:6050/getjob/'+this.state.bid)\n    const sktok = d2.data.data5.Skill_Req.split(\";\");\n    this.setState({skilltok:sktok,comname:d2.data.data5.Company_name,title:d2.data.data5.Title,deadline:d2.data.data5.Deadline,des:d2.data.data5.Descri,maxapp:d2.data.data5.Maxappli,maxpos:d2.data.data5.Maxposi,jtype:d2.data.data5.Job_Type,jdur:d2.data.data5.Job_Dura,sala:d2.data.data5.Job_Sal})\n}\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\nbackMA(){\n    window.location.href='/dashboard'\n}\n\nrender (){\n  return (\n        <Container>\n            <br/>\n            <Button onClick={this.backMA} color=\"primary\" variant=\"contained\">Back to Dashboard</Button>\n            <br/>\n            <br/>\n            <Paper elevation={3} >\n                <Typography variant=\"h4\"><b>Recrutier </b>{this.state.comname}</Typography><br/>\n                <Typography variant=\"h5\">{this.state.title}</Typography><br/>\n                <Typography variant=\"body1\"><b>Deadline</b> {this.state.deadline}</Typography><br/>\n                <Typography variant=\"body2\">{this.state.des}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Max applications</b> {this.state.maxapp}</Typography><br/>\n                <Typography variant=\"overline\"><b>Max positions</b> {this.state.maxpos}</Typography><br/>\n                <Typography variant=\"overline\"><b>Skills Required </b> {this.state.skilltok.map(name => (<Chip variant=\"outlined\" color=\"default\" size=\"small\" label={name} />))}</Typography><br/>\n                <Typography variant=\"overline\"><b>Salary</b> {this.state.sala}</Typography><br/><Divider variant=\"middle\" />\n                <Typography variant=\"overline\"><b>Job Type  </b> \n                { \n                    this.state.jtype===1 ? <>Full Time</> : this.state.jtype===2 ? <>Part Time</> :this.state.jtype===3 ? <>Work From Home</> : null\n                }\n                </Typography><br/>\n                <Typography variant=\"overline\"><b>Job Duration </b> \n                {\n                    this.state.jdur === 1 ? <>1 month</> : this.state.jdur === 2 ? <>2 months</> :this.state.jdur === 3 ? <>3 months</> :this.state.jdur === 4 ? <>4 months</> : this.state.jdur === 5 ? <>5 months</> : this.state.jdur === 6 ? <>6 months</> : <>Indefinite</>\n                }\n                </Typography><br/>\n                <Typography variant=\"overline\"><b>Rating</b> {this.state.points}</Typography><br/>\n\n            </Paper>\n            <br/>\n            <br/>\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/applicantmyappli.js",["224"],"import React, { Component } from 'react'\nimport {Container} from '@material-ui/core';\nimport {Typography,Paper} from '@material-ui/core';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating'\nimport Chip from '@material-ui/core/Chip';\nimport SplitButton from \"./buttongrp\";\n\nclass Mydashappli extends Component {\n    \n    constructor(props){\n        super(props)\n        this.state = {\n            userid:localStorage.getItem(\"Jodar_id\"),\n            appliedjob:[],\n            workingjob:[],\n            rejectedjob:[],\n            // ratingoptions : [<><FS/><ES/><ES/><ES/><ES/></>,<><FS/><FS/><ES/><ES/><ES/></>,<><FS/><FS/><FS/><ES/><ES/></>,<><FS/><FS/><FS/><FS/><ES/></>,<><FS/><FS/><FS/><FS/><FS/></>]\n        }\n        this.getinfo = this.getinfo.bind(this);\n        this.rateitnow = this.rateitnow.bind(this);\n    }\n    getinfo = async () =>{\n        console.log(this.props.datajj)\n        const appliedjobvar = [];\n        const workingjobvar = [];\n        const rejectedjobvar = [];\n        for(let i=0;i<this.props.datajj.length;i++)\n        {\n            const p = this.props.datajj[i]\n            const pa = {jobid:p[\"JobId\"],userid:p[\"UserId\"],Title:p[\"Title\"],RecName:p[\"Company_name\"],Rating:p[\"Rating\"],Salary:p[\"Job_Sal\"],Datejoon:p[\"Datejoon\"],Datejoin:p[\"Datejoin\"],Status:p[\"Status\"]}\n            if(pa.Rating === 0)pa.Rating = \"NaN\"\n            if(pa.Status === \"pending\" || pa.Status === \"shortlisted\" || pa.Status === \"shortlist\")appliedjobvar.push(pa)\n            if(pa.Status === \"rejected\")rejectedjobvar.push(pa)\n            if(pa.Status === \"accepted\")workingjobvar.push(pa)\n        }\n        // const pa = {jobid:\"1\",userid:\"2\",Title:\"aa\",RecName:\"bb\",Rating:0,Salary:5000,Datejoon:\"12/02/2021 23:55\",Datejoin:\"12/02/2021 23:55\",Status:\"p\"}\n        // const pat = {jobid:\"2\",userid:\"2\",Title:\"aa\",RecName:\"bb\",Rating:0,Salary:5000,Datejoon:\"12/02/2021 23:55\",Datejoin:\"12/02/2021 23:55\",Status:\"p\"}\n        // workingjobvar.push(pa)\n        // workingjobvar.push(pat)\n        this.setState({appliedjob:appliedjobvar,workingjob:workingjobvar,rejectedjob:rejectedjobvar})\n    }\n    rateitnow = (val,idten)=>{\n        // console.log(event.target.id)\n        // console.log(event.target.value)\n        console.log(val)\n    }\n    async componentDidMount(){\n        this.getinfo()\n    }\n    render() {\n     \n        return (\n            <Container>\n                <Paper elevation={3}>\n                    <br/>\n                        <Typography>My Accepted Jobs</Typography>\n                        <br/>\n                        <TableContainer style={{padding:50}}>\n                            <Table  aria-label=\"customize table\">\n                                <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                <TableRow>\n                                    <TableCell style={{color:\"white\"}} align=\"left\">Title</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Date of join</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Recruiter</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Salary</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"right\">Rated By You</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.workingjob.map((row) => (\n                                    <TableRow>\n                                        <TableCell align=\"left\">{row.Title}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoin}</TableCell>\n                                        <TableCell align=\"center\">{row.RecName}</TableCell>\n                                        <TableCell align=\"center\">{row.Salary}</TableCell>\n                                        <TableCell align=\"right\">\n                                            {\n                                                (row.Rating === \"NaN\" || row.Rating === 0) ? <div><SplitButton datar={row.jobid}></SplitButton></div>:<Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.Rating} readOnly />\n                                            }\n                                        </TableCell>\n                                    </TableRow>\n                                    ))}\n                                    {\n                                    !this.state.workingjob.length &&\n                                    <TableRow>\n                                        <TableCell align=\"left\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\" ><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                    </TableRow>\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                        <br/>\n                    <br/>\n                </Paper>\n                <br/>\n                <Paper elevation={3}>\n                    <br/>\n                        <Typography>My Applied Jobs</Typography>\n                        <br/>\n                        <TableContainer style={{padding:50}}>\n                            <Table  aria-label=\"customize table\">\n                                <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                <TableRow>\n                                    <TableCell style={{color:\"white\"}} align=\"left\">Title</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Applied on</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Recruiter</TableCell>\n                                    <TableCell style={{color:\"white\"}}  align=\"right\">Salary</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.appliedjob.map((row) => (\n                                    <TableRow>\n                                        <TableCell align=\"left\">{row.Title}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoon}</TableCell>\n                                        <TableCell align=\"center\">{row.RecName}</TableCell>\n                                        <TableCell  align=\"right\">{row.Salary}</TableCell>\n                                    </TableRow>\n                                    ))}\n                                    {\n                                    !this.state.appliedjob.length && \n                                    <TableRow>\n                                        <TableCell align=\"left\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell  align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                    </TableRow>\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                        <br/>\n                    <br/>\n                </Paper>\n                <br/>\n                <Paper elevation={3}>\n                    <br/>\n                        <Typography>My Rejected Jobs</Typography>\n                        <br/>\n                        <TableContainer style={{padding:50}}>\n                            <Table  aria-label=\"customize table\">\n                                <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                                <TableRow>\n                                    <TableCell style={{color:\"white\"}} align=\"left\">Title</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Applied on</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Rejected on</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"center\">Recruiter</TableCell>\n                                    <TableCell style={{color:\"white\"}} align=\"right\">Salary</TableCell>\n                                </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    {this.state.rejectedjob.map((row) => (\n                                    <TableRow>\n                                        <TableCell align=\"left\">{row.Title}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoon}</TableCell>\n                                        <TableCell align=\"center\">{row.Datejoin}</TableCell>\n                                        <TableCell align=\"center\">{row.RecName}</TableCell>\n                                        <TableCell  align=\"right\">{row.Salary}</TableCell>\n                                    </TableRow>\n                                    ))}\n                                    {\n                                    !this.state.rejectedjob.length && \n                                    <TableRow>\n                                        <TableCell align=\"left\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell align=\"center\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                        <TableCell  align=\"right\"><Chip variant=\"outlined\" color=\"secondary\" size=\"small\" label=\"None\" /></TableCell>\n                                    </TableRow>\n                                    }\n                                </TableBody>\n                            </Table>\n                            </TableContainer>\n                        <br/>\n                    <br/>\n                </Paper>\n            </Container>\n        )\n    }\n}\n\nexport default Mydashappli\n\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi.js",["225"],"\n  \nimport React, { Component } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from 'axios'\nclass GooLogin extends Component {\n    constructor() {\n        super();\n        this.state = {\n            redirectToReferrer: false,\n            redirect : \"\",\n        };\n    }\n    responseGoogle = response => {\n        console.log(response)\n        const { googleId, name, email } = response.profileObj;\n        const newUser = {\n            email: email,\n            password: googleId,\n            checked:true,\n        }\n        if(newUser)\n        {\n            console.log(newUser)\n\n            axios.post('http://localhost:6050/login', newUser)\n                .then(res => {\n                    console.log(\"ok\")\n                    console.log(res.data)\n                    if(res.data.type === \"r\")\n                    this.setState({redirect:\"r\"})\n                    if(res.data.type === \"a\")\n                    this.setState({redirect:\"a\"})\n                    window.alert(res.data.msg)\n                    if(res.data.status === '201')\n                    {\n                        console.log(res.data.userdata._id)\n                        localStorage.setItem(\"Jodar_id\", res.data.userdata._id);\n                        localStorage.setItem(\"Jodar_id_type\", res.data.userdata.type);\n                        this.setState({login:false})\n                    }\n                    else\n                    window.location.reload()\n                    this.setState({ redirectToReferrer: true });\n                })\n                .catch(err=>{\n                    console.log(err)\n                })\n        }\n        else{\n            alert(\"failed\");\n        }\n    };\n\n    render() {\n        if (this.state.redirectToReferrer) {\n            \n                if(this.state.redirect === \"r\"){\n                    return <Redirect to=\"/marketplace\"></Redirect>\n                }\n                if(this.state.redirect === \"a\")\n                {\n                    return <Redirect to=\"/dashboard\"></Redirect>\n                }\n        }\n        else {\n            return (\n                <GoogleLogin\n                    clientId=\"350226045015-6b6mlsel22edgq77dgtkbqb179gk2ng7.apps.googleusercontent.com\"\n                    buttonText=\"Login with Google\"\n                    onSuccess={this.responseGoogle}\n                    onFailure={this.responseGoogle}\n                />\n            );\n        }\n        \n    }\n}\n\nexport default GooLogin;","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/zzgoogleapi2.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/userdata.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/apptable.js",["226","227"],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/recdashviewacc.js",["228","229","230","231","232","233","234","235","236","237","238","239","240","241","242","243","244","245","246"],"import React, {Component} from 'react';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Divider from '@material-ui/core/Divider';\nimport Chip from '@material-ui/core/Chip';\nimport TextField from '@material-ui/core/TextField';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport Paper from '@material-ui/core/Paper';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Rating from '@material-ui/lab/Rating'\nimport { FormatAlignJustify } from '@material-ui/icons';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { DATE_COL_DEF } from '@material-ui/data-grid';\nimport SplitButton2 from './buttongrp2'\n\n\n\nexport default class  Acceptedlist extends Component {\n constructor(props)\n {\n     super(props)\n     this.state={\n         comname:this.props.data1[0],\n         email:\"\",\n         ondate:\"\",\n         jodar_id:localStorage.getItem('Jodar_id'),\n         accmahadata : [],\n         accmahadata2 : [],\n         sora : \"1\",\n         soda : \"1\",\n         sota : \"1\",\n         sona : \"1\",\n        }\n        console.log(props)\n    this.onChange=this.onChange.bind(this)\n    this.getjobinfo=this.getjobinfo.bind(this)\n    this.handleChange=this.handleChange.bind(this)\n    this.handleChange2=this.handleChange2.bind(this)\n    this.handlesortra = this.handlesortra.bind(this);\n    this.handlesortna = this.handlesortna.bind(this);\n    this.handlesortda = this.handlesortda.bind(this);\n    this.handlesortta = this.handlesortta.bind(this);\n }\n getjobinfo = async () =>{\n    //  all accepted jobs from applicationd\n    const pp =   await axios.get('http://localhost:6050/getjobuser/'+ this.state.jodar_id)\n\n    const mahadata =[];\n    for(let i=0;i<pp.data.datapp.length;i++)\n    {\n        const p = pp.data.datapp[i];\n        const pjob = await axios.get('http://localhost:6050/allmypostedjobs/'+ p[\"_id\"])\n        for(let j=0;j<pjob.data.allmypostedjobs.length;j++)\n        {\n            const pj = pjob.data.allmypostedjobs[j];\n            const puser = await axios.get('http://localhost:6050/user/'+ pj[\"UserId\"])\n            const pa = {JOBUSID:pj['juid'],LoRating:pj[\"LoRating\"],Raating:0,Title:p[\"Title\"],Jtype:p[\"Job_Type\"],Datejoin:pj[\"Datejoin\"],Rating:puser.data.data1.expire,sumRating:puser.data.data1.reset_token,fname:puser.data.data1.Firstname,lname:puser.data.data1.Lastname, uid : puser.data.data1._id}\n            if(pa.Rating===0)pa.Raating = 0\n            else{\n                pa.Raating = pa.sumRating/pa.Rating\n            }\n            if(pa.Jtype===1)pa.Jtype = \"Full Time\"\n            if(pa.Jtype===2)pa.Jtype = \"Part Time\"\n            if(pa.Jtype===3)pa.Jtype = \"Work From Home\"\n            console.log(pa)\n            mahadata.push(pa)\n        }\n    }\n\n    \n    this.setState({accmahadata2:mahadata,accmahadata:mahadata})\n    // console.log(mahadata)\n    // console.log(this.state.accmahadata2)\n}\n\nhandlesortra=(e)=>{\n    this.setState({sora : e.target.value,sona:\"1\",soda:\"1\",sota:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n      let g=a.Raating\n      let h=b.Raating\n      if(a.Raating===\"NaN\" ||a.Raating===NaN || a.Raating=== 0)g=6\n      if(b.Raating===\"NaN\" ||b.Raating===NaN || b.Raating=== 0)h=6\n      return g - h\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n      let g=a.Raating\n      let h=b.Raating\n      if(a.Raating===\"NaN\" ||a.Raating===NaN || a.Raating=== 0)g=-1\n      if(b.Raating===\"NaN\" ||b.Raating===NaN || b.Raating=== 0)h=-1\n      return h-g\n    })\n    this.setState({accmahadata2:tempmahadata})\n    // console.log(tempmahadata)\n  }\n  handlesortna=(e)=>{\n    this.setState({sona : e.target.value,sora:\"1\",soda:\"1\",sota:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.fname +\" \" +a.lname\n        let h=b.fname +\" \" +b.lname\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return g.localeCompare(h)\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.fname +\" \" +a.lname\n        let h=b.fname +\" \" +b.lname\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return h.localeCompare(g)\n    })\n    this.setState({accmahadata2:tempmahadata})\n    // console.log(tempmahadata)\n  }\n    handlesortta=(e)=>{\n    this.setState({sota : e.target.value,sora:\"1\",soda:\"1\",sona:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Title\n        let h=b.Title\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return g.localeCompare(h)\n    })\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Title\n        let h=b.Title\n        g=g.toLowerCase();\n        h=h.toLowerCase();\n        return h.localeCompare(g)\n    })\n    this.setState({accmahadata2:tempmahadata})\n    // console.log(tempmahadata)\n  }\n  handlesortda=(e)=>{\n    this.setState({soda : e.target.value,sona:\"1\",sora:\"1\",sota:\"1\"})\n    let tempmahadata = this.state.accmahadata\n    if(e.target.value===3)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Datejoon\n            let h=b.Datejoon\n            // console.log(g + h)\n            let gdeadd=g.split(\" \");\n            let gdatede = gdeadd[0].split(\"/\");\n            let gtimede = gdeadd[1].split(\":\");\n            let hdeadd=h.split(\" \");\n            let hdatede = hdeadd[0].split(\"/\");\n            let htimede = hdeadd[1].split(\":\");\n            let gstr = `${(\"0\"+gdatede[2]).split(-4)}/${(\"0\"+gdatede[1]).split(-2)}/${(\"0\"+gdatede[0]).split(-2)} ${(\"0\"+gtimede[0]).split(-2)}:${(\"0\"+gtimede[1]).split(-2)}`\n            let hstr = `${(\"0\"+hdatede[2]).split(-4)}/${(\"0\"+hdatede[1]).split(-2)}/${(\"0\"+hdatede[0]).split(-2)} ${(\"0\"+htimede[0]).split(-2)}:${(\"0\"+htimede[1]).split(-2)}`\n            return gstr.localeCompare(hstr)\n    })\n    if(e.target.value==2)\n    tempmahadata.sort(function(a,b) {\n        let g=a.Datejoon\n            let h=b.Datejoon\n            // console.log(g + h)\n            let gdeadd=g.split(\" \");\n            let gdatede = gdeadd[0].split(\"/\");\n            let gtimede = gdeadd[1].split(\":\");\n            let hdeadd=h.split(\" \");\n            let hdatede = hdeadd[0].split(\"/\");\n            let htimede = hdeadd[1].split(\":\");\n            let gstr = `${(\"0\"+gdatede[2]).split(-4)}/${(\"0\"+gdatede[1]).split(-2)}/${(\"0\"+gdatede[0]).split(-2)} ${(\"0\"+gtimede[0]).split(-2)}:${(\"0\"+gtimede[1]).split(-2)}`\n            let hstr = `${(\"0\"+hdatede[2]).split(-4)}/${(\"0\"+hdatede[1]).split(-2)}/${(\"0\"+hdatede[0]).split(-2)} ${(\"0\"+htimede[0]).split(-2)}:${(\"0\"+htimede[1]).split(-2)}`\n            return hstr.localeCompare(gstr)\n    })\n    this.setState({accmahadata2:tempmahadata})\n    console.log(tempmahadata)\n    \n  }\n\nasync componentDidMount(){\n    this.getjobinfo()\n}\n\n\nhandleChange = (event) => {\n    let name = event.target.name\n    let value = event.target.value\n    this.setState({[name]: value}, () => {\n        console.log(this.state)\n    })\n};\nhandleChange2 = (event) => {\n    this.setState({uptarval:event.target.value})\n};\nonChange(event) {\n    let name = event.target.name\n    let value = event.target.value\n    this.setState({[name]: value}, () => {\n        console.log(this.state)\n    })\n}\n\n\n\nrender (){\n  return (\n        <Container>\n            <br/>\n            <Box color=\"black\" css={{ bgcolor: '#e2e2e2', p: 1,textAlign:'left',border:'black',borderRadius:'5px',margin:'20px'}}>\n                <Typography variant=\"caption\">Company Name</Typography>\n                <Typography variant=\"subtitle2\">{this.state.comname}</Typography>\n            </Box>\n            <br/>\n            <br/>\n\n                {\n                this.state.accmahadata != []\n                ?\n                <Box style={{padding:15,borderRadius:5}}>\n                    <Paper elevation={1} style={{border:\"black 1px solid\"}}>\n                    <br/>\n                    <Typography variant=\"h3\"><b>Sorting</b></Typography>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Rating</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sora}\n                        onChange={this.handlesortra}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by Name</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sona}\n                        onChange={this.handlesortna}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by joning date</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.soda}\n                        onChange={this.handlesortda}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    <InputLabel id=\"demo-simple-select-label\">Sorting by job title</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-label\"\n                        id=\"demo-simple-select\"\n                        value={this.state.sota}\n                        onChange={this.handlesortta}\n                    >\n                        <MenuItem value={1}>None</MenuItem>\n                        <MenuItem value={2}>Asc</MenuItem>\n                        <MenuItem value={3}>Des</MenuItem>\n                    </Select>\n                    <br/>\n                    <br/>\n                    </Paper>\n\n                    {/* <hr></hr> */}\n                    <br/>\n                    <br/>\n                    <TableContainer size=\"small\" aria-label=\"a dense table\" component={Paper}>\n                        <Table aria-label=\"customize table\" >\n                            <TableHead style={{backgroundColor:\"rgb(63,81,181)\"}}>\n                            <TableRow>\n                                <TableCell style={{color:\"white\"}}>Applicant Name</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Job Title</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Job Type</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Date of Joining</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Rating by you*</TableCell>\n                                <TableCell style={{color:\"white\"}} align=\"center\">Rating**</TableCell>\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                {this.state.accmahadata2.map((row) => (\n                                <TableRow>\n                                    <TableCell >{row.fname} {row.lname}</TableCell>\n                                    <TableCell align=\"center\">{row.Title}</TableCell>\n                                    <TableCell align=\"center\">{row.Jtype}</TableCell>\n                                    <TableCell align=\"center\">{row.Datejoin}</TableCell>\n                                    <TableCell align=\"center\">{\n                                                ( row.LoRating === '' || row.LoRating === 0 ||  row.LoRating === \"NaN\" || isNaN(row.LoRating) === true ) ? <div><SplitButton2 datar={row.uid} dataj={row.JOBUSID}></SplitButton2></div>:<Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.LoRating} readOnly />\n                                    }</TableCell>\n                                    <TableCell align=\"center\">{\n                                        row.Raating === 0\n                                        ?\n                                        <>Not rated yet</>\n                                        :\n                                        <Rating name=\"half-rating-read\" precision={0.5} name=\"read-only\" value={row.Raating} readOnly />\n                                        }</TableCell>\n                                </TableRow>\n                                ))}\n                           \n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                    <br/>\n                    <br/>\n                    <Typography variant=\"subtitle2\">* Ratings shown here are ratings given by you to the applicants for corresponding job this is not an average rating</Typography>\n                    <Typography variant=\"subtitle2\">** Average rating of an applicant covering average of rating for all job (accepted ones only)  </Typography>\n                </Box>\n                :\n                null\n                }\n        </Container>\n  )};\n}\n","/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp.js",[],"/home/architjain/Desktop/class/ssad/ass/jodar/frontend/src/components/buttongrp2.js",[],{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","replacedBy":"250"},{"ruleId":"251","severity":1,"message":"252","line":29,"column":35,"nodeType":"253","messageId":"254","endLine":29,"endColumn":36,"suggestions":"255"},{"ruleId":"251","severity":1,"message":"256","line":29,"column":40,"nodeType":"253","messageId":"254","endLine":29,"endColumn":41,"suggestions":"257"},{"ruleId":"251","severity":1,"message":"252","line":29,"column":56,"nodeType":"253","messageId":"254","endLine":29,"endColumn":57,"suggestions":"258"},{"ruleId":"259","severity":1,"message":"260","line":30,"column":38,"nodeType":"261","messageId":"262","endLine":30,"endColumn":40},{"ruleId":"251","severity":1,"message":"252","line":37,"column":35,"nodeType":"253","messageId":"254","endLine":37,"endColumn":36,"suggestions":"263"},{"ruleId":"251","severity":1,"message":"256","line":37,"column":40,"nodeType":"253","messageId":"254","endLine":37,"endColumn":41,"suggestions":"264"},{"ruleId":"251","severity":1,"message":"252","line":37,"column":56,"nodeType":"253","messageId":"254","endLine":37,"endColumn":57,"suggestions":"265"},{"ruleId":"266","severity":1,"message":"267","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":17},{"ruleId":"266","severity":1,"message":"270","line":16,"column":8,"nodeType":"268","messageId":"269","endLine":16,"endColumn":13},{"ruleId":"266","severity":1,"message":"271","line":61,"column":10,"nodeType":"268","messageId":"269","endLine":61,"endColumn":12},{"ruleId":"266","severity":1,"message":"272","line":63,"column":20,"nodeType":"268","messageId":"269","endLine":63,"endColumn":30},{"ruleId":"266","severity":1,"message":"273","line":64,"column":10,"nodeType":"268","messageId":"269","endLine":64,"endColumn":14},{"ruleId":"266","severity":1,"message":"274","line":89,"column":9,"nodeType":"268","messageId":"269","endLine":89,"endColumn":19},{"ruleId":"266","severity":1,"message":"275","line":93,"column":9,"nodeType":"268","messageId":"269","endLine":93,"endColumn":20},{"ruleId":"251","severity":1,"message":"252","line":105,"column":31,"nodeType":"253","messageId":"254","endLine":105,"endColumn":32,"suggestions":"276"},{"ruleId":"251","severity":1,"message":"256","line":105,"column":36,"nodeType":"253","messageId":"254","endLine":105,"endColumn":37,"suggestions":"277"},{"ruleId":"251","severity":1,"message":"252","line":105,"column":52,"nodeType":"253","messageId":"254","endLine":105,"endColumn":53,"suggestions":"278"},{"ruleId":"259","severity":1,"message":"260","line":110,"column":39,"nodeType":"261","messageId":"262","endLine":110,"endColumn":41},{"ruleId":"259","severity":1,"message":"260","line":125,"column":39,"nodeType":"261","messageId":"262","endLine":125,"endColumn":41},{"ruleId":"266","severity":1,"message":"279","line":202,"column":9,"nodeType":"268","messageId":"269","endLine":202,"endColumn":15},{"ruleId":"280","severity":1,"message":"281","line":383,"column":9,"nodeType":"282","endLine":383,"endColumn":66},{"ruleId":"266","severity":1,"message":"272","line":101,"column":20,"nodeType":"268","messageId":"269","endLine":101,"endColumn":30},{"ruleId":"266","severity":1,"message":"271","line":105,"column":10,"nodeType":"268","messageId":"269","endLine":105,"endColumn":12},{"ruleId":"251","severity":1,"message":"252","line":214,"column":31,"nodeType":"253","messageId":"254","endLine":214,"endColumn":32,"suggestions":"283"},{"ruleId":"251","severity":1,"message":"256","line":214,"column":36,"nodeType":"253","messageId":"254","endLine":214,"endColumn":37,"suggestions":"284"},{"ruleId":"251","severity":1,"message":"252","line":214,"column":52,"nodeType":"253","messageId":"254","endLine":214,"endColumn":53,"suggestions":"285"},{"ruleId":"259","severity":1,"message":"260","line":219,"column":39,"nodeType":"261","messageId":"262","endLine":219,"endColumn":41},{"ruleId":"280","severity":1,"message":"281","line":428,"column":9,"nodeType":"282","endLine":428,"endColumn":67},{"ruleId":"286","severity":1,"message":"287","line":445,"column":40,"nodeType":"261","messageId":"288","endLine":445,"endColumn":62},{"ruleId":"289","severity":1,"message":"290","line":445,"column":181,"nodeType":"291","endLine":445,"endColumn":197},{"ruleId":"292","severity":1,"message":"293","line":508,"column":17,"nodeType":"282","endLine":508,"endColumn":71},{"ruleId":"266","severity":1,"message":"294","line":2,"column":10,"nodeType":"268","messageId":"269","endLine":2,"endColumn":18},{"ruleId":"266","severity":1,"message":"295","line":3,"column":19,"nodeType":"268","messageId":"269","endLine":3,"endColumn":22},{"ruleId":"266","severity":1,"message":"296","line":3,"column":23,"nodeType":"268","messageId":"269","endLine":3,"endColumn":33},{"ruleId":"266","severity":1,"message":"297","line":3,"column":34,"nodeType":"268","messageId":"269","endLine":3,"endColumn":43},{"ruleId":"266","severity":1,"message":"298","line":3,"column":44,"nodeType":"268","messageId":"269","endLine":3,"endColumn":50},{"ruleId":"266","severity":1,"message":"299","line":4,"column":9,"nodeType":"268","messageId":"269","endLine":4,"endColumn":22},{"ruleId":"266","severity":1,"message":"294","line":2,"column":9,"nodeType":"268","messageId":"269","endLine":2,"endColumn":17},{"ruleId":"266","severity":1,"message":"300","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":14},{"ruleId":"266","severity":1,"message":"301","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":13},{"ruleId":"266","severity":1,"message":"302","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"303","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":24},{"ruleId":"266","severity":1,"message":"304","line":12,"column":8,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"266","severity":1,"message":"305","line":13,"column":8,"nodeType":"268","messageId":"269","endLine":13,"endColumn":17},{"ruleId":"266","severity":1,"message":"306","line":23,"column":10,"nodeType":"268","messageId":"269","endLine":23,"endColumn":31},{"ruleId":"266","severity":1,"message":"307","line":23,"column":33,"nodeType":"268","messageId":"269","endLine":23,"endColumn":51},{"ruleId":"266","severity":1,"message":"308","line":27,"column":7,"nodeType":"268","messageId":"269","endLine":27,"endColumn":17},{"ruleId":"259","severity":1,"message":"309","line":119,"column":35,"nodeType":"261","messageId":"262","endLine":119,"endColumn":37},{"ruleId":"259","severity":1,"message":"309","line":119,"column":74,"nodeType":"261","messageId":"262","endLine":119,"endColumn":76},{"ruleId":"266","severity":1,"message":"310","line":129,"column":11,"nodeType":"268","messageId":"269","endLine":129,"endColumn":14},{"ruleId":"266","severity":1,"message":"311","line":130,"column":11,"nodeType":"268","messageId":"269","endLine":130,"endColumn":14},{"ruleId":"259","severity":1,"message":"309","line":368,"column":9,"nodeType":"261","messageId":"262","endLine":368,"endColumn":11},{"ruleId":"259","severity":1,"message":"309","line":368,"column":20,"nodeType":"261","messageId":"262","endLine":368,"endColumn":22},{"ruleId":"259","severity":1,"message":"309","line":369,"column":9,"nodeType":"261","messageId":"262","endLine":369,"endColumn":11},{"ruleId":"259","severity":1,"message":"309","line":369,"column":20,"nodeType":"261","messageId":"262","endLine":369,"endColumn":22},{"ruleId":"259","severity":1,"message":"309","line":370,"column":9,"nodeType":"261","messageId":"262","endLine":370,"endColumn":11},{"ruleId":"259","severity":1,"message":"309","line":370,"column":20,"nodeType":"261","messageId":"262","endLine":370,"endColumn":22},{"ruleId":"289","severity":1,"message":"290","line":567,"column":69,"nodeType":"291","endLine":567,"endColumn":85},{"ruleId":"259","severity":1,"message":"309","line":607,"column":37,"nodeType":"261","messageId":"262","endLine":607,"endColumn":39},{"ruleId":"266","severity":1,"message":"312","line":2,"column":27,"nodeType":"268","messageId":"269","endLine":2,"endColumn":36},{"ruleId":"266","severity":1,"message":"313","line":4,"column":10,"nodeType":"268","messageId":"269","endLine":4,"endColumn":30},{"ruleId":"266","severity":1,"message":"314","line":4,"column":32,"nodeType":"268","messageId":"269","endLine":4,"endColumn":40},{"ruleId":"266","severity":1,"message":"315","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":17},{"ruleId":"266","severity":1,"message":"304","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":19},{"ruleId":"266","severity":1,"message":"297","line":8,"column":8,"nodeType":"268","messageId":"269","endLine":8,"endColumn":17},{"ruleId":"266","severity":1,"message":"316","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":12},{"ruleId":"266","severity":1,"message":"267","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":17},{"ruleId":"266","severity":1,"message":"317","line":12,"column":8,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"266","severity":1,"message":"318","line":14,"column":8,"nodeType":"268","messageId":"269","endLine":14,"endColumn":15},{"ruleId":"266","severity":1,"message":"319","line":16,"column":8,"nodeType":"268","messageId":"269","endLine":16,"endColumn":14},{"ruleId":"266","severity":1,"message":"320","line":18,"column":8,"nodeType":"268","messageId":"269","endLine":18,"endColumn":13},{"ruleId":"266","severity":1,"message":"270","line":28,"column":8,"nodeType":"268","messageId":"269","endLine":28,"endColumn":13},{"ruleId":"266","severity":1,"message":"321","line":29,"column":8,"nodeType":"268","messageId":"269","endLine":29,"endColumn":13},{"ruleId":"266","severity":1,"message":"322","line":102,"column":10,"nodeType":"268","messageId":"269","endLine":102,"endColumn":17},{"ruleId":"266","severity":1,"message":"323","line":102,"column":19,"nodeType":"268","messageId":"269","endLine":102,"endColumn":29},{"ruleId":"259","severity":1,"message":"260","line":224,"column":28,"nodeType":"261","messageId":"262","endLine":224,"endColumn":30},{"ruleId":"259","severity":1,"message":"260","line":229,"column":28,"nodeType":"261","messageId":"262","endLine":229,"endColumn":30},{"ruleId":"266","severity":1,"message":"295","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":11},{"ruleId":"266","severity":1,"message":"301","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":13},{"ruleId":"266","severity":1,"message":"302","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"303","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":24},{"ruleId":"266","severity":1,"message":"304","line":12,"column":8,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"266","severity":1,"message":"305","line":13,"column":8,"nodeType":"268","messageId":"269","endLine":13,"endColumn":17},{"ruleId":"266","severity":1,"message":"307","line":16,"column":10,"nodeType":"268","messageId":"269","endLine":16,"endColumn":28},{"ruleId":"266","severity":1,"message":"295","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":11},{"ruleId":"266","severity":1,"message":"297","line":8,"column":8,"nodeType":"268","messageId":"269","endLine":8,"endColumn":17},{"ruleId":"266","severity":1,"message":"301","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":13},{"ruleId":"266","severity":1,"message":"302","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"303","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":24},{"ruleId":"266","severity":1,"message":"304","line":12,"column":8,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"266","severity":1,"message":"305","line":13,"column":8,"nodeType":"268","messageId":"269","endLine":13,"endColumn":17},{"ruleId":"266","severity":1,"message":"307","line":16,"column":10,"nodeType":"268","messageId":"269","endLine":16,"endColumn":28},{"ruleId":"289","severity":1,"message":"290","line":84,"column":199,"nodeType":"291","endLine":84,"endColumn":215},{"ruleId":"266","severity":1,"message":"324","line":17,"column":27,"nodeType":"268","messageId":"269","endLine":17,"endColumn":31},{"ruleId":"266","severity":1,"message":"294","line":2,"column":9,"nodeType":"268","messageId":"269","endLine":2,"endColumn":17},{"ruleId":"266","severity":1,"message":"300","line":5,"column":8,"nodeType":"268","messageId":"269","endLine":5,"endColumn":14},{"ruleId":"266","severity":1,"message":"298","line":3,"column":8,"nodeType":"268","messageId":"269","endLine":3,"endColumn":14},{"ruleId":"266","severity":1,"message":"318","line":6,"column":8,"nodeType":"268","messageId":"269","endLine":6,"endColumn":15},{"ruleId":"266","severity":1,"message":"325","line":7,"column":8,"nodeType":"268","messageId":"269","endLine":7,"endColumn":12},{"ruleId":"266","severity":1,"message":"297","line":8,"column":8,"nodeType":"268","messageId":"269","endLine":8,"endColumn":17},{"ruleId":"266","severity":1,"message":"301","line":9,"column":8,"nodeType":"268","messageId":"269","endLine":9,"endColumn":13},{"ruleId":"266","severity":1,"message":"302","line":10,"column":8,"nodeType":"268","messageId":"269","endLine":10,"endColumn":18},{"ruleId":"266","severity":1,"message":"303","line":11,"column":8,"nodeType":"268","messageId":"269","endLine":11,"endColumn":24},{"ruleId":"266","severity":1,"message":"304","line":12,"column":8,"nodeType":"268","messageId":"269","endLine":12,"endColumn":19},{"ruleId":"266","severity":1,"message":"305","line":13,"column":8,"nodeType":"268","messageId":"269","endLine":13,"endColumn":17},{"ruleId":"266","severity":1,"message":"307","line":23,"column":10,"nodeType":"268","messageId":"269","endLine":23,"endColumn":28},{"ruleId":"266","severity":1,"message":"326","line":27,"column":10,"nodeType":"268","messageId":"269","endLine":27,"endColumn":22},{"ruleId":"286","severity":1,"message":"287","line":97,"column":30,"nodeType":"261","messageId":"288","endLine":97,"endColumn":45},{"ruleId":"286","severity":1,"message":"287","line":98,"column":30,"nodeType":"261","messageId":"288","endLine":98,"endColumn":45},{"ruleId":"286","severity":1,"message":"287","line":105,"column":30,"nodeType":"261","messageId":"288","endLine":105,"endColumn":45},{"ruleId":"286","severity":1,"message":"287","line":106,"column":30,"nodeType":"261","messageId":"288","endLine":106,"endColumn":45},{"ruleId":"259","severity":1,"message":"260","line":174,"column":22,"nodeType":"261","messageId":"262","endLine":174,"endColumn":24},{"ruleId":"259","severity":1,"message":"309","line":231,"column":40,"nodeType":"261","messageId":"262","endLine":231,"endColumn":42},{"ruleId":"289","severity":1,"message":"290","line":316,"column":281,"nodeType":"291","endLine":316,"endColumn":297},{"ruleId":"289","severity":1,"message":"290","line":323,"column":89,"nodeType":"291","endLine":323,"endColumn":105},"no-native-reassign",["327"],"no-negated-in-lhs",["328"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["329","330"],"Unnecessary escape character: \\@.",["331","332"],["333","334"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["335","336"],["337","338"],["339","340"],"no-unused-vars","'CardMedia' is defined but never used.","Identifier","unusedVar","'nopro' is defined but never used.","'dp' is assigned a value but never used.","'setJodarID' is assigned a value but never used.","'open' is assigned a value but never used.","'handleOpen' is assigned a value but never used.","'handleClose' is assigned a value but never used.",["341","342"],["343","344"],["345","346"],"'addbio' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["347","348"],["349","350"],["351","352"],"use-isnan","Use the isNaN function to compare with NaN.","comparisonWithNaN","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","'Redirect' is defined but never used.","'Box' is defined but never used.","'Typography' is defined but never used.","'TextField' is defined but never used.","'Button' is defined but never used.","'AccountCircle' is defined but never used.","'Dashyy' is defined but never used.","'Radio' is defined but never used.","'RadioGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'ControlPointDuplicate' is defined but never used.","'FormatAlignJustify' is defined but never used.","'nodemailer' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'dd1' is assigned a value but never used.","'dd2' is assigned a value but never used.","'useEffect' is defined but never used.","'columnLookupSelector' is defined but never used.","'DataGrid' is defined but never used.","'Container' is defined but never used.","'Card' is defined but never used.","'CardActions' is defined but never used.","'Divider' is defined but never used.","'Avatar' is defined but never used.","'Modal' is defined but never used.","'axios' is defined but never used.","'datasci' is assigned a value but never used.","'setDatasci' is assigned a value but never used.","'name' is assigned a value but never used.","'Chip' is defined but never used.","'DATE_COL_DEF' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"353","fix":"354","desc":"355"},{"messageId":"356","fix":"357","desc":"358"},{"messageId":"353","fix":"359","desc":"355"},{"messageId":"356","fix":"360","desc":"358"},{"messageId":"353","fix":"361","desc":"355"},{"messageId":"356","fix":"362","desc":"358"},{"messageId":"353","fix":"363","desc":"355"},{"messageId":"356","fix":"364","desc":"358"},{"messageId":"353","fix":"365","desc":"355"},{"messageId":"356","fix":"366","desc":"358"},{"messageId":"353","fix":"367","desc":"355"},{"messageId":"356","fix":"368","desc":"358"},{"messageId":"353","fix":"369","desc":"355"},{"messageId":"356","fix":"370","desc":"358"},{"messageId":"353","fix":"371","desc":"355"},{"messageId":"356","fix":"372","desc":"358"},{"messageId":"353","fix":"373","desc":"355"},{"messageId":"356","fix":"374","desc":"358"},{"messageId":"353","fix":"375","desc":"355"},{"messageId":"356","fix":"376","desc":"358"},{"messageId":"353","fix":"377","desc":"355"},{"messageId":"356","fix":"378","desc":"358"},{"messageId":"353","fix":"379","desc":"355"},{"messageId":"356","fix":"380","desc":"358"},"removeEscape",{"range":"381","text":"382"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"383","text":"384"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"385","text":"382"},{"range":"386","text":"384"},{"range":"387","text":"382"},{"range":"388","text":"384"},{"range":"389","text":"382"},{"range":"390","text":"384"},{"range":"391","text":"382"},{"range":"392","text":"384"},{"range":"393","text":"382"},{"range":"394","text":"384"},{"range":"395","text":"382"},{"range":"396","text":"384"},{"range":"397","text":"382"},{"range":"398","text":"384"},{"range":"399","text":"382"},{"range":"400","text":"384"},{"range":"401","text":"382"},{"range":"402","text":"384"},{"range":"403","text":"382"},{"range":"404","text":"384"},{"range":"405","text":"382"},{"range":"406","text":"384"},[867,868],"",[867,867],"\\",[872,873],[872,872],[888,889],[888,888],[1212,1213],[1212,1212],[1217,1218],[1217,1217],[1233,1234],[1233,1233],[2712,2713],[2712,2712],[2717,2718],[2717,2717],[2733,2734],[2733,2733],[5271,5272],[5271,5271],[5276,5277],[5276,5276],[5292,5293],[5292,5292]]